{"ast":null,"code":"var _jsxFileName = \"/home/egor/WebstormProjects/NodeReact/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport About from './About';\nimport Chat, { updateNav } from './Chat/Chat';\nimport Private from './Chat/Private';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport openSocket from 'socket.io-client';\n\nfunction connectToWS(nickname) {\n  var _this = this;\n\n  var socket = openSocket('http://localhost:5000/room?nickname=' + nickname);\n  socket.on('userConnected', function (message) {\n    console.log('Websocket: broadcast from \\'room\\' namespace \\'connected\\' channel:', message);\n\n    _this.setState({\n      usersOnline: message.data.usersOnline\n    });\n\n    _this.setState({\n      messages: _this.state.messages.concat(message)\n    });\n\n    updateNav({\n      navName: 'ROOM',\n      route: '/'\n    });\n  });\n  socket.on('message', function (message) {\n    console.log('Websocket: broadcast from \\'room\\' namespace \\'message\\' channel:', message);\n\n    _this.setState({\n      messages: _this.state.messages.concat(message)\n    });\n  });\n  socket.on('userDisconnected', function (message) {\n    console.log('Websocket: broadcast from \\'room\\' namespace \\'userDisconnected\\' channel:', message);\n\n    _this.setState({\n      usersOnline: message.data.usersOnline\n    });\n\n    _this.setState({\n      messages: _this.state.messages.concat(message)\n    });\n  });\n}\n\nfunction sendToServer(message) {\n  this.socket.emit('message', message);\n}\n\nReactDOM.render(React.createElement(Router, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, React.createElement(Route, {\n  path: \"/\",\n  component: Chat,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/about\",\n  component: About,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}), React.createElement(Redirect, {\n  to: '/',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}))), document.getElementById('root'));\nexport { connectToWS, sendToServer };","map":{"version":3,"sources":["/home/egor/WebstormProjects/NodeReact/client/src/index.js"],"names":["React","ReactDOM","About","Chat","updateNav","Private","BrowserRouter","Router","Route","Switch","Redirect","openSocket","connectToWS","nickname","socket","on","message","console","log","setState","usersOnline","data","messages","state","concat","navName","route","sendToServer","emit","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,IAAcC,SAAd,QAA8B,aAA9B;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,KAAjC,EAAwCC,MAAxC,EAAgDC,QAAhD,QAA+D,kBAA/D;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AAEA,SAASC,WAAT,CAAqBC,QAArB,EAA+B;AAAA;;AAC3B,MAAMC,MAAM,GAAGH,UAAU,CAAC,yCAAyCE,QAA1C,CAAzB;AACAC,EAAAA,MAAM,CAACC,EAAP,CAAU,eAAV,EAA2B,UAACC,OAAD,EAAa;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ,EAAmFF,OAAnF;;AACA,IAAA,KAAI,CAACG,QAAL,CAAc;AAACC,MAAAA,WAAW,EAAEJ,OAAO,CAACK,IAAR,CAAaD;AAA3B,KAAd;;AACA,IAAA,KAAI,CAACD,QAAL,CAAc;AAACG,MAAAA,QAAQ,EAAE,KAAI,CAACC,KAAL,CAAWD,QAAX,CAAoBE,MAApB,CAA2BR,OAA3B;AAAX,KAAd;;AACAZ,IAAAA,SAAS,CAAC;AACNqB,MAAAA,OAAO,EAAC,MADF;AAENC,MAAAA,KAAK,EAAE;AAFD,KAAD,CAAT;AAIH,GARD;AASAZ,EAAAA,MAAM,CAACC,EAAP,CAAU,SAAV,EAAqB,UAACC,OAAD,EAAa;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY,mEAAZ,EAAiFF,OAAjF;;AACA,IAAA,KAAI,CAACG,QAAL,CAAc;AAACG,MAAAA,QAAQ,EAAE,KAAI,CAACC,KAAL,CAAWD,QAAX,CAAoBE,MAApB,CAA2BR,OAA3B;AAAX,KAAd;AACH,GAHD;AAIAF,EAAAA,MAAM,CAACC,EAAP,CAAU,kBAAV,EAA8B,UAACC,OAAD,EAAa;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAY,4EAAZ,EAA0FF,OAA1F;;AACA,IAAA,KAAI,CAACG,QAAL,CAAc;AAACC,MAAAA,WAAW,EAAEJ,OAAO,CAACK,IAAR,CAAaD;AAA3B,KAAd;;AACA,IAAA,KAAI,CAACD,QAAL,CAAc;AAACG,MAAAA,QAAQ,EAAE,KAAI,CAACC,KAAL,CAAWD,QAAX,CAAoBE,MAApB,CAA2BR,OAA3B;AAAX,KAAd;AACH,GAJD;AAKH;;AACD,SAASW,YAAT,CAAsBX,OAAtB,EAA+B;AAC3B,OAAKF,MAAL,CAAYc,IAAZ,CAAiB,SAAjB,EAA4BZ,OAA5B;AACH;;AAEDf,QAAQ,CAAC4B,MAAT,CACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,GAAZ;AAAgB,EAAA,SAAS,EAAE1B,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,QAAZ;AAAqB,EAAA,SAAS,EAAED,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,EAGI,oBAAC,QAAD;AAAU,EAAA,EAAE,EAAE,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHJ,CADJ,CADJ,EAQM4B,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARN;AAWA,SAAQnB,WAAR,EAAqBe,YAArB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport About from './About';\nimport Chat, {updateNav} from './Chat/Chat';\nimport Private from './Chat/Private';\nimport {BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\nimport openSocket from 'socket.io-client';\n\nfunction connectToWS(nickname) {\n    const socket = openSocket('http://localhost:5000/room?nickname=' + nickname);\n    socket.on('userConnected', (message) => {\n        console.log('Websocket: broadcast from \\'room\\' namespace \\'connected\\' channel:', message);\n        this.setState({usersOnline: message.data.usersOnline});\n        this.setState({messages: this.state.messages.concat(message)});\n        updateNav({\n            navName:'ROOM',\n            route: '/'\n        });\n    });\n    socket.on('message', (message) => {\n        console.log('Websocket: broadcast from \\'room\\' namespace \\'message\\' channel:', message);\n        this.setState({messages: this.state.messages.concat(message)});\n    });\n    socket.on('userDisconnected', (message) => {\n        console.log('Websocket: broadcast from \\'room\\' namespace \\'userDisconnected\\' channel:', message);\n        this.setState({usersOnline: message.data.usersOnline});\n        this.setState({messages: this.state.messages.concat(message)});\n    });\n}\nfunction sendToServer(message) {\n    this.socket.emit('message', message);\n}\n\nReactDOM.render(\n    <Router>\n        <Switch>\n            <Route path=\"/\" component={Chat}/>\n            <Route path=\"/about\" component={About}/>\n            <Redirect to={'/'} />\n        </Switch>\n    </Router>\n    , document.getElementById('root'));\n\n\nexport {connectToWS, sendToServer};\n"]},"metadata":{},"sourceType":"module"}