{"ast":null,"code":"import _classCallCheck from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/egor/WebstormProjects/NodeReact/client/src/Chat/UserOnline.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport Cookies from 'universal-cookie';\n\nvar UserOnline =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserOnline, _React$Component);\n\n  function UserOnline(props) {\n    var _this;\n\n    _classCallCheck(this, UserOnline);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserOnline).call(this, props));\n\n    _this.toggleMenu = function () {\n      var cookies = new Cookies();\n      console.log('TEST', cookies.get('id'), _this.props.user);\n      if (parseInt(_this.props.sessionId) !== parseInt(_this.props.user.id)) _this.setState({\n        toggleMenu: !_this.state.toggleMenu\n      }); // fetch('/session/user').then(res => res.json()).then(data => {\n      //\n      // });\n    };\n\n    _this.handleOutsideClick = function (event) {\n      if (_this.divRef.current !== event.target.querySelector('div') && event.target.tagName.toLowerCase() !== 'img') {\n        _this.setState({\n          toggleMenu: false\n        });\n      }\n    };\n\n    _this.handleMouseEnter = function (event) {\n      event.target.style.backgroundColor = 'blue';\n    };\n\n    _this.handleMouseLeave = function (event) {\n      event.target.style.backgroundColor = 'white';\n    };\n\n    _this.setMenuRefs = function (elem) {\n      return _this.menuRefs.push(elem);\n    };\n\n    _this.divRef = React.createRef();\n    _this.menuRefs = [];\n    _this.state = {\n      toggleMenu: false,\n      subDivBackground: 'white'\n    };\n    return _this;\n  }\n\n  _createClass(UserOnline, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener('click', this.handleOutsideClick);\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.menuRefs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var menuRef = _step.value;\n          menuRef.addEventListener('mouseenter', this.handleMouseEnter);\n          menuRef.addEventListener('mouseleave', this.handleMouseLeave);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var subDivStyle = {\n        cursor: 'pointer',\n        backgroundColor: this.state.subDivBackground,\n        display: 'flex',\n        justifyContent: 'center'\n      };\n      var divStyle = {\n        position: 'absolute',\n        display: this.state.toggleMenu ? 'block' : 'none',\n        border: 'black 1px solid',\n        minWidth: '160px',\n        boxShadow: '0px 8px 16px 0px rgba(0,0,0,0.2)',\n        backgroundColor: 'white',\n        zIndex: 1\n      };\n      return React.createElement(\"div\", {\n        ref: this.divRef,\n        onClick: this.toggleMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.props.user.avatar,\n        style: {\n          cursor: 'pointer'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), this.props.user.nickname, React.createElement(\"div\", {\n        style: divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Link, {\n        style: {\n          textDecoration: 'none'\n        },\n        to: \"#\",\n        onClick: function onClick() {\n          return _this2.props.connectToPrivate(_this2.props.user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        ref: this.setMenuRefs,\n        style: subDivStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C \\u0432 \\u041B\\u0421\"))));\n    }\n  }]);\n\n  return UserOnline;\n}(React.Component);\n\nexport default UserOnline;","map":{"version":3,"sources":["/home/egor/WebstormProjects/NodeReact/client/src/Chat/UserOnline.js"],"names":["React","BrowserRouter","Router","Route","Switch","Link","Cookies","UserOnline","props","toggleMenu","cookies","console","log","get","user","parseInt","sessionId","id","setState","state","handleOutsideClick","event","divRef","current","target","querySelector","tagName","toLowerCase","handleMouseEnter","style","backgroundColor","handleMouseLeave","setMenuRefs","elem","menuRefs","push","createRef","subDivBackground","document","addEventListener","menuRef","subDivStyle","cursor","display","justifyContent","divStyle","position","border","minWidth","boxShadow","zIndex","avatar","nickname","textDecoration","connectToPrivate","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {BrowserRouter as Router, Route, Switch, Link} from 'react-router-dom';\nimport Cookies from 'universal-cookie';\n\nclass UserOnline extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.divRef = React.createRef();\n        this.menuRefs = [];\n        this.state = {\n            toggleMenu: false,\n            subDivBackground: 'white',\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('click', this.handleOutsideClick);\n        for(let menuRef of this.menuRefs) {\n            menuRef.addEventListener('mouseenter', this.handleMouseEnter);\n            menuRef.addEventListener('mouseleave', this.handleMouseLeave);\n        }\n    }\n\n    toggleMenu = () => {\n        const cookies = new Cookies();\n        console.log('TEST', cookies.get('id'), this.props.user);\n        if (parseInt(this.props.sessionId) !== parseInt(this.props.user.id))\n            this.setState({toggleMenu: !this.state.toggleMenu});\n        // fetch('/session/user').then(res => res.json()).then(data => {\n        //\n        // });\n    };\n\n    handleOutsideClick = (event) => {\n        if ((this.divRef.current !== event.target.querySelector('div'))\n        && (event.target.tagName.toLowerCase() !== 'img')){\n            this.setState({toggleMenu: false});\n        }\n    };\n\n    handleMouseEnter = (event) => {\n        event.target.style.backgroundColor = 'blue';\n    };\n\n    handleMouseLeave = (event) => {\n        event.target.style.backgroundColor = 'white';\n    };\n\n    setMenuRefs = (elem) => {\n        return this.menuRefs.push(elem)\n    };\n\n    render() {\n        const subDivStyle = {\n            cursor: 'pointer',\n            backgroundColor: this.state.subDivBackground,\n            display: 'flex',\n            justifyContent: 'center'\n        };\n        const divStyle = {\n            position: 'absolute',\n            display: this.state.toggleMenu ? 'block': 'none',\n            border: 'black 1px solid',\n            minWidth: '160px',\n            boxShadow: '0px 8px 16px 0px rgba(0,0,0,0.2)',\n            backgroundColor: 'white',\n            zIndex: 1\n        };\n        return (\n            <div ref={this.divRef} onClick={this.toggleMenu}>\n                <img src={this.props.user.avatar} style={{cursor: 'pointer'}} />{this.props.user.nickname}\n                <div style={divStyle}>\n                    <Link style={{ textDecoration: 'none' }} to={`#`}\n                    onClick={() => this.props.connectToPrivate(this.props.user)}>\n                        <div ref={this.setMenuRefs} style={subDivStyle}>\n                            Написать в ЛС\n                        </div>\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UserOnline;"]},"metadata":{},"sourceType":"module"}