{"ast":null,"code":"import _classCallCheck from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/egor/WebstormProjects/NodeReact/client/src/Chat/Private.js\";\nimport React from 'react';\nimport openSocket from 'socket.io-client';\n\nvar Private =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Private, _React$Component);\n\n  function Private() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Private);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Private)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.connectToPrivate = function (partner) {\n      fetch('/session/user').then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        var conversationId = data.user.id + '-' + partner.id;\n        console.log(conversationId);\n        _this.socket = openSocket(\"http://localhost:5000/private?conversationId=\".concat(conversationId));\n\n        _this.socket.on('established', function (message) {\n          console.log('Websocket: broadcast from \\'private\\' namespace \\'established\\' channel:', message); // this.updateUsersOnline(message.data.usersOnline);\n\n          _this.setState({\n            nav: _this.state.nav.concat({\n              navName: partner.nickname,\n              route: _this.pathToPrivateChat + partner.nickname\n            })\n          });\n\n          _this.updateMessages(message);\n        });\n\n        _this.socket.on('message', function (message) {\n          console.log('Websocket: broadcast from \\'private\\' namespace \\'message\\' channel:', message);\n\n          _this.updateMessages(message);\n        }); // this.socket.on('demolished', (message) => {\n        //     console.log('Websocket: broadcast from \\'private\\' namespace \\'userDisconnected\\' channel:', message);\n        //     this.updateUsersOnline(message.data.usersOnline);\n        //     this.updateMessages(message);\n        // });\n\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Private, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.props);\n      var partnerId = this.props.match.params.id;\n      document.title = 'Private with ' + partnerId;\n      this.props.createPrivate(partnerId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"NOT IMPLEMENTED\");\n    }\n  }]);\n\n  return Private;\n}(React.Component);\n\nexport default Private;","map":{"version":3,"sources":["/home/egor/WebstormProjects/NodeReact/client/src/Chat/Private.js"],"names":["React","openSocket","Private","connectToPrivate","partner","fetch","then","res","json","data","conversationId","user","id","console","log","socket","on","message","setState","nav","state","concat","navName","nickname","route","pathToPrivateChat","updateMessages","props","partnerId","match","params","document","title","createPrivate","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;IAEMC,O;;;;;;;;;;;;;;;;;;UASFC,gB,GAAmB,UAACC,OAAD,EAAa;AAC5BC,MAAAA,KAAK,CAAC,eAAD,CAAL,CAAuBC,IAAvB,CAA4B,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAA/B,EAA+CF,IAA/C,CAAoD,UAAAG,IAAI,EAAI;AACxD,YAAIC,cAAc,GAAID,IAAI,CAACE,IAAL,CAAUC,EAAV,GAAe,GAAf,GAAqBR,OAAO,CAACQ,EAAnD;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,cAAZ;AACA,cAAKK,MAAL,GAAcd,UAAU,wDAAiDS,cAAjD,EAAxB;;AACA,cAAKK,MAAL,CAAYC,EAAZ,CAAe,aAAf,EAA8B,UAACC,OAAD,EAAa;AACvCJ,UAAAA,OAAO,CAACC,GAAR,CAAY,0EAAZ,EAAwFG,OAAxF,EADuC,CAEvC;;AACA,gBAAKC,QAAL,CAAc;AAACC,YAAAA,GAAG,EAAE,MAAKC,KAAL,CAAWD,GAAX,CAAeE,MAAf,CAAsB;AAClCC,cAAAA,OAAO,EAAElB,OAAO,CAACmB,QADiB;AAElCC,cAAAA,KAAK,EAAE,MAAKC,iBAAL,GAAuBrB,OAAO,CAACmB;AAFJ,aAAtB;AAAN,WAAd;;AAIA,gBAAKG,cAAL,CAAoBT,OAApB;AACH,SARD;;AASA,cAAKF,MAAL,CAAYC,EAAZ,CAAe,SAAf,EAA0B,UAACC,OAAD,EAAa;AACnCJ,UAAAA,OAAO,CAACC,GAAR,CAAY,sEAAZ,EAAoFG,OAApF;;AACA,gBAAKS,cAAL,CAAoBT,OAApB;AACH,SAHD,EAbwD,CAiBxD;AACA;AACA;AACA;AACA;;AACH,OAtBD;AAuBH,K;;;;;;;wCA/BmB;AAChBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKa,KAAjB;AACA,UAAIC,SAAS,GAAG,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBlB,EAAxC;AACAmB,MAAAA,QAAQ,CAACC,KAAT,GAAiB,kBAAkBJ,SAAnC;AACA,WAAKD,KAAL,CAAWM,aAAX,CAAyBL,SAAzB;AACH;;;6BA4BQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ;AAKH;;;;EAzCiB5B,KAAK,CAACkC,S;;AA4C5B,eAAehC,OAAf","sourcesContent":["import React from 'react';\nimport openSocket from 'socket.io-client';\n\nclass Private extends React.Component{\n\n    componentDidMount() {\n        console.log(this.props);\n        let partnerId = this.props.match.params.id;\n        document.title = 'Private with ' + partnerId;\n        this.props.createPrivate(partnerId);\n    }\n\n    connectToPrivate = (partner) => {\n        fetch('/session/user').then(res => res.json()).then(data => {\n            let conversationId = (data.user.id + '-' + partner.id);\n            console.log(conversationId);\n            this.socket = openSocket(`http://localhost:5000/private?conversationId=${conversationId}`);\n            this.socket.on('established', (message) => {\n                console.log('Websocket: broadcast from \\'private\\' namespace \\'established\\' channel:', message);\n                // this.updateUsersOnline(message.data.usersOnline);\n                this.setState({nav: this.state.nav.concat({\n                        navName: partner.nickname,\n                        route: this.pathToPrivateChat+partner.nickname\n                    })});\n                this.updateMessages(message);\n            });\n            this.socket.on('message', (message) => {\n                console.log('Websocket: broadcast from \\'private\\' namespace \\'message\\' channel:', message);\n                this.updateMessages(message);\n            });\n            // this.socket.on('demolished', (message) => {\n            //     console.log('Websocket: broadcast from \\'private\\' namespace \\'userDisconnected\\' channel:', message);\n            //     this.updateUsersOnline(message.data.usersOnline);\n            //     this.updateMessages(message);\n            // });\n        });\n    };\n    \n    render() {\n        return (\n            <div>\n                NOT IMPLEMENTED\n            </div>\n        )\n    }\n}\n\nexport default Private;"]},"metadata":{},"sourceType":"module"}