{"ast":null,"code":"import _classCallCheck from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/egor/WebstormProjects/NodeReact/client/src/Chat/Chat.js\";\nimport React from 'react';\nimport Messages from \"./Messages\";\nimport ChatInput from \"./ChatInput\";\nimport Login from './Login';\nimport openSocket from 'socket.io-client';\nimport UserOnline from \"./UserOnline\";\nimport { BrowserRouter as Router, Route, Switch, Redirect, Link } from \"react-router-dom\";\nimport Private from './Private/Private';\n\nvar Chat =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  function Chat(props) {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chat).call(this, props));\n\n    _this.createRoom = function (nickname) {\n      _this.socket = openSocket('http://localhost:5000?nickname=' + nickname);\n\n      _this.socket.on('userConnected', function (message) {\n        console.log('Websocket: broadcast from \\'userConnected\\' channel:', message);\n\n        _this.updateUsersOnline(message.data.usersOnline);\n\n        _this.updateMessages(message);\n      });\n\n      _this.socket.on('message', function (message) {\n        console.log('Websocket: broadcast from \\'message\\' channel:', message);\n\n        _this.updateMessages(message);\n      });\n\n      _this.socket.on('userDisconnected', function (message) {\n        console.log('Websocket: broadcast from \\'userDisconnected\\' channel:', message);\n\n        _this.updateUsersOnline(message.data.usersOnline);\n\n        _this.updateMessages(message);\n      });\n    };\n\n    _this.createPrivate = function (nickname) {\n      _this.socket = openSocket('http://localhost:5000?nickname=' + nickname);\n\n      _this.socket.on('userConnected', function (message) {\n        console.log('Websocket: broadcast from \\'userConnected\\' channel:', message);\n\n        _this.updateUsersOnline(message.data.usersOnline);\n\n        _this.updateMessages(message);\n      });\n\n      _this.socket.on('message', function (message) {\n        console.log('Websocket: broadcast from \\'message\\' channel:', message);\n\n        _this.updateMessages(message);\n      });\n\n      _this.socket.on('userDisconnected', function (message) {\n        console.log('Websocket: broadcast from \\'userDisconnected\\' channel:', message);\n\n        _this.updateUsersOnline(message.data.usersOnline);\n\n        _this.updateMessages(message);\n      });\n    };\n\n    _this.sendToServer = function (message) {\n      _this.socket.emit('message', message);\n    };\n\n    _this.updateMessages = function (message) {\n      _this.setState({\n        messages: _this.state.messages.concat(message)\n      });\n    };\n\n    _this.updateUsersOnline = function (users) {\n      _this.setState({\n        usersOnline: users\n      });\n    };\n\n    _this.pathToPrivateChat = '/private/:id';\n    _this.socket = null;\n    _this.state = {\n      usersOnline: [],\n      messages: []\n    };\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var usersOnlineStyle = {\n        float: 'right',\n        width: '400px',\n        height: '600px',\n        border: 'black 2px solid',\n        padding: '20px'\n      };\n      var usersOnline = this.state.usersOnline.map(function (user, i) {\n        return React.createElement(UserOnline, {\n          key: i,\n          user: user,\n          path: _this2.pathToPrivateChat,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"\".concat(this.pathToPrivateChat),\n        component: function component() {\n          return React.createElement(Private, {\n            createPrivate: _this2.createRoom,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(Redirect, {\n        from: '/:path',\n        to: '/',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: '/',\n        render: function render() {\n          return React.createElement(Login, {\n            createWS: _this2.createRoom,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        style: usersOnlineStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, usersOnline), React.createElement(Messages, {\n        messages: this.state.messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(ChatInput, {\n        sendToServer: this.sendToServer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport default Chat;","map":{"version":3,"sources":["/home/egor/WebstormProjects/NodeReact/client/src/Chat/Chat.js"],"names":["React","Messages","ChatInput","Login","openSocket","UserOnline","BrowserRouter","Router","Route","Switch","Redirect","Link","Private","Chat","props","createRoom","nickname","socket","on","message","console","log","updateUsersOnline","data","usersOnline","updateMessages","createPrivate","sendToServer","emit","setState","messages","state","concat","users","pathToPrivateChat","usersOnlineStyle","float","width","height","border","padding","map","user","i","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Messages from \"./Messages\";\nimport ChatInput from \"./ChatInput\";\nimport Login from './Login';\nimport openSocket from 'socket.io-client';\nimport UserOnline from \"./UserOnline\";\nimport {BrowserRouter as Router, Route, Switch, Redirect, Link} from \"react-router-dom\";\nimport Private from './Private/Private';\n\nclass Chat extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.pathToPrivateChat = '/private/:id';\n        this.socket = null;\n        this.state = {\n            usersOnline: [],\n            messages: []\n        };\n    }\n\n    createRoom = (nickname) => {\n        this.socket = openSocket('http://localhost:5000?nickname=' + nickname);\n        this.socket.on('userConnected', (message) => {\n            console.log('Websocket: broadcast from \\'userConnected\\' channel:', message);\n            this.updateUsersOnline(message.data.usersOnline);\n            this.updateMessages(message);\n        });\n        this.socket.on('message', (message) => {\n            console.log('Websocket: broadcast from \\'message\\' channel:', message);\n            this.updateMessages(message);\n        });\n        this.socket.on('userDisconnected', (message) => {\n            console.log('Websocket: broadcast from \\'userDisconnected\\' channel:', message);\n            this.updateUsersOnline(message.data.usersOnline);\n            this.updateMessages(message);\n        });\n    };\n\n    createPrivate = (nickname) => {\n        this.socket = openSocket('http://localhost:5000?nickname=' + nickname);\n        this.socket.on('userConnected', (message) => {\n            console.log('Websocket: broadcast from \\'userConnected\\' channel:', message);\n            this.updateUsersOnline(message.data.usersOnline);\n            this.updateMessages(message);\n        });\n        this.socket.on('message', (message) => {\n            console.log('Websocket: broadcast from \\'message\\' channel:', message);\n            this.updateMessages(message);\n        });\n        this.socket.on('userDisconnected', (message) => {\n            console.log('Websocket: broadcast from \\'userDisconnected\\' channel:', message);\n            this.updateUsersOnline(message.data.usersOnline);\n            this.updateMessages(message);\n        });\n    };\n\n    sendToServer = (message) => {\n        this.socket.emit('message', message);\n    };\n\n    updateMessages = (message) => {\n        this.setState({messages: this.state.messages.concat(message)});\n    };\n\n    updateUsersOnline = (users) => {\n        this.setState({usersOnline: users});\n    };\n\n    render() {\n\n        const usersOnlineStyle = {\n            float: 'right',\n            width: '400px',\n            height: '600px',\n            border: 'black 2px solid',\n            padding: '20px'\n        };\n\n        const usersOnline = this.state.usersOnline.map((user, i) => {\n            return <UserOnline key={i} user={user} path={this.pathToPrivateChat} />\n        });\n        return(\n            <div>\n                <Router>\n                    <Switch>\n                        <Route path={`${this.pathToPrivateChat}`}\n                               component={() => <Private createPrivate={this.createRoom}/>}/>\n                        <Redirect from={'/:path'} to={'/'} />\n                        <Route path={'/'} render={() => <Login createWS={this.createRoom} /> } />\n                    </Switch>\n                </Router>\n                <div style={usersOnlineStyle}>\n                    {usersOnline}\n                </div>\n                <Messages messages={this.state.messages} />\n                <ChatInput sendToServer={this.sendToServer} />\n            </div>\n        );\n    }\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}