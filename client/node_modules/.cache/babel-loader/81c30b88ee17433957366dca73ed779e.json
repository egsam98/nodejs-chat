{"ast":null,"code":"import _classCallCheck from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/egor/WebstormProjects/NodeReact/client/src/Chat/Private.js\";\nimport React from 'react';\nimport openSocket from 'socket.io-client';\nimport { updateNav } from \"./Chat\";\nimport Messages from \"./Messages\";\nimport ChatInput from \"./ChatInput\";\nimport '../css/styles.css';\nimport UserOnline from \"./UserOnline\";\nimport { sendToServer, connectToWS, connectToPrivate } from \"../index\";\nvar pathToPrivateChat = '/private/';\n\nvar Private =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Private, _React$Component);\n\n  function Private(props) {\n    var _this;\n\n    _classCallCheck(this, Private);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Private).call(this, props));\n    _this.socket = null;\n    _this.state = {\n      usersOnline: [],\n      messages: []\n    };\n    _this.connectToPrivate = connectToPrivate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.sendToServer = sendToServer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Private, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var params = new URLSearchParams(this.props.location.search);\n      this.partner = {\n        id: params.get('id'),\n        nickname: params.get('nickname')\n      };\n      document.title = 'Private with ' + this.partner.nickname;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log('PRIV', this.state.messages);\n      var usersOnline = this.state.usersOnline.map(function (user, i) {\n        return React.createElement(UserOnline, {\n          key: i,\n          user: user,\n          path: _this2.props.pathToPrivateChat,\n          conversationId: _this2.conversationId,\n          connectToPrivate: _this2.connectToPrivate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"ALLLLLLLLLLLLOOOOOOOOOOO\", React.createElement(\"div\", {\n        className: \"usersOnlineStyle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, usersOnline), React.createElement(Messages, {\n        messages: this.state.messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(ChatInput, {\n        sendToServer: this.sendToServer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Private;\n}(React.Component);\n\nexport default Private;\nexport { pathToPrivateChat, connectToPrivate };","map":{"version":3,"sources":["/home/egor/WebstormProjects/NodeReact/client/src/Chat/Private.js"],"names":["React","openSocket","updateNav","Messages","ChatInput","UserOnline","sendToServer","connectToWS","connectToPrivate","pathToPrivateChat","Private","props","socket","state","usersOnline","messages","bind","params","URLSearchParams","location","search","partner","id","get","nickname","document","title","console","log","map","user","i","conversationId","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAAQC,SAAR,QAAwB,QAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,mBAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAAQC,YAAR,EAAsBC,WAAtB,EAAmCC,gBAAnC,QAA0D,UAA1D;AACA,IAAMC,iBAAiB,GAAG,WAA1B;;IAGMC,O;;;;;AAEF,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,iFAAMA,KAAN;AACA,UAAKC,MAAL,GAAc,IAAd;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,EADJ;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIA,UAAKP,gBAAL,GAAwBA,gBAAgB,CAACQ,IAAjB,uDAAxB;AACA,UAAKV,YAAL,GAAoBA,YAAY,CAACU,IAAb,uDAApB;AARe;AASlB;;;;wCAGmB;AAChB,UAAMC,MAAM,GAAG,IAAIC,eAAJ,CAAoB,KAAKP,KAAL,CAAWQ,QAAX,CAAoBC,MAAxC,CAAf;AACA,WAAKC,OAAL,GAAe;AACXC,QAAAA,EAAE,EAAEL,MAAM,CAACM,GAAP,CAAW,IAAX,CADO;AAEXC,QAAAA,QAAQ,EAAEP,MAAM,CAACM,GAAP,CAAW,UAAX;AAFC,OAAf;AAIAE,MAAAA,QAAQ,CAACC,KAAT,GAAiB,kBAAkB,KAAKL,OAAL,CAAaG,QAAhD;AACH;;;6BAEQ;AAAA;;AACLG,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,KAAKf,KAAL,CAAWE,QAA/B;AACA,UAAMD,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAAX,CAAuBe,GAAvB,CAA2B,UAACC,IAAD,EAAOC,CAAP,EAAa;AACxD,eAAO,oBAAC,UAAD;AAAY,UAAA,GAAG,EAAEA,CAAjB;AAAoB,UAAA,IAAI,EAAED,IAA1B;AAAgC,UAAA,IAAI,EAAE,MAAI,CAACnB,KAAL,CAAWF,iBAAjD;AACY,UAAA,cAAc,EAAE,MAAI,CAACuB,cADjC;AAEY,UAAA,gBAAgB,EAAE,MAAI,CAACxB,gBAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,OAJmB,CAApB;AAKA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAEI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKM,WADL,CAFJ,EAKI,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAMI,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAE,KAAKT,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CADJ;AAUH;;;;EAxCiBN,KAAK,CAACiC,S;;AA2C5B,eAAevB,OAAf;AACA,SAAQD,iBAAR,EAA2BD,gBAA3B","sourcesContent":["import React from 'react';\nimport openSocket from 'socket.io-client';\nimport {updateNav} from \"./Chat\";\nimport Messages from \"./Messages\";\nimport ChatInput from \"./ChatInput\";\nimport '../css/styles.css';\nimport UserOnline from \"./UserOnline\";\nimport {sendToServer, connectToWS, connectToPrivate} from \"../index\";\nconst pathToPrivateChat = '/private/';\n\n\nclass Private extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.socket = null;\n        this.state = {\n            usersOnline: [],\n            messages: [],\n        };\n        this.connectToPrivate = connectToPrivate.bind(this);\n        this.sendToServer = sendToServer.bind(this);\n    }\n\n\n    componentDidMount() {\n        const params = new URLSearchParams(this.props.location.search);\n        this.partner = {\n            id: params.get('id'),\n            nickname: params.get('nickname')\n        };\n        document.title = 'Private with ' + this.partner.nickname;\n    }\n    \n    render() {\n        console.log('PRIV', this.state.messages);\n        const usersOnline = this.state.usersOnline.map((user, i) => {\n            return <UserOnline key={i} user={user} path={this.props.pathToPrivateChat}\n                               conversationId={this.conversationId}\n                               connectToPrivate={this.connectToPrivate} />\n        });\n        return (\n            <div>\n                ALLLLLLLLLLLLOOOOOOOOOOO\n                <div className='usersOnlineStyle'>\n                    {usersOnline}\n                </div>\n                <Messages messages={this.state.messages} />\n                <ChatInput sendToServer={this.sendToServer} />\n            </div>\n        )\n    }\n}\n\nexport default Private;\nexport {pathToPrivateChat, connectToPrivate};"]},"metadata":{},"sourceType":"module"}