{"ast":null,"code":"import _classCallCheck from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/egor/WebstormProjects/NodeReact/client/src/Chat/Messages.js\";\nimport React from 'react';\nimport '../css/styles.css';\n\nvar Messages =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Messages, _React$Component);\n\n  function Messages(props) {\n    _classCallCheck(this, Messages);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Messages).call(this, props));\n  }\n\n  _createClass(Messages, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// this.setState({height: ReactDOM.findDOMNode(chatInputRef).getBoundingClientRect().top})\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var info = {\n        color: '#828282',\n        fontStyle: 'italic',\n        display: 'flex',\n        justifyContent: 'center',\n        padding: '0px'\n      };\n      var messagesDiv = {\n        height: '100%',\n        overflow: 'scroll',\n        overflowX: 'hidden',\n        // overflowY: 'auto',\n        padding: '20px'\n      };\n      var messages = this.props.messages.map(function (message, i) {\n        var messageStyle = {\n          fontSize: '24px',\n          padding: '5px',\n          wordWrap: 'break-word'\n        };\n        if (message.type === 'info') Object.assign(messageStyle, info);\n        return React.createElement(\"div\", {\n          style: messageStyle,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, message.text);\n      });\n      return React.createElement(\"div\", {\n        style: messagesDiv,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, messages);\n    }\n  }]);\n\n  return Messages;\n}(React.Component);\n\nexport default Messages;","map":{"version":3,"sources":["/home/egor/WebstormProjects/NodeReact/client/src/Chat/Messages.js"],"names":["React","Messages","props","info","color","fontStyle","display","justifyContent","padding","messagesDiv","height","overflow","overflowX","messages","map","message","i","messageStyle","fontSize","wordWrap","type","Object","assign","text","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;;IAEMC,Q;;;;;AAEF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,iFACTA,KADS;AAElB;;;;wCAEmB,CAChB;AACH;;;6BAEQ;AAEL,UAAMC,IAAI,GAAG;AACTC,QAAAA,KAAK,EAAE,SADE;AAETC,QAAAA,SAAS,EAAE,QAFF;AAGTC,QAAAA,OAAO,EAAE,MAHA;AAITC,QAAAA,cAAc,EAAE,QAJP;AAKTC,QAAAA,OAAO,EAAE;AALA,OAAb;AAQA,UAAMC,WAAW,GAAG;AAChBC,QAAAA,MAAM,EAAE,MADQ;AAEhBC,QAAAA,QAAQ,EAAE,QAFM;AAGhBC,QAAAA,SAAS,EAAE,QAHK;AAIhB;AACAJ,QAAAA,OAAO,EAAE;AALO,OAApB;AAQA,UAAMK,QAAQ,GAAG,KAAKX,KAAL,CAAWW,QAAX,CAAoBC,GAApB,CAAwB,UAACC,OAAD,EAAUC,CAAV,EAAgB;AAErD,YAAMC,YAAY,GAAG;AACjBC,UAAAA,QAAQ,EAAE,MADO;AAEjBV,UAAAA,OAAO,EAAE,KAFQ;AAGjBW,UAAAA,QAAQ,EAAE;AAHO,SAArB;AAMA,YAAIJ,OAAO,CAACK,IAAR,KAAiB,MAArB,EAA6BC,MAAM,CAACC,MAAP,CAAcL,YAAd,EAA4Bd,IAA5B;AAC7B,eAAO;AAAK,UAAA,KAAK,EAAEc,YAAZ;AAA0B,UAAA,GAAG,EAAED,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACFD,OAAO,CAACQ,IADN,CAAP;AAGH,OAZgB,CAAjB;AAaA,aAAO;AAAK,QAAA,KAAK,EAAEd,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BI,QAA1B,CAAP;AACH;;;;EA1CkBb,KAAK,CAACwB,S;;AA6C7B,eAAevB,QAAf","sourcesContent":["import React from 'react';\nimport '../css/styles.css';\n\nclass Messages extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        // this.setState({height: ReactDOM.findDOMNode(chatInputRef).getBoundingClientRect().top})\n    }\n\n    render() {\n\n        const info = {\n            color: '#828282',\n            fontStyle: 'italic',\n            display: 'flex',\n            justifyContent: 'center',\n            padding: '0px'\n        };\n\n        const messagesDiv = {\n            height: '100%',\n            overflow: 'scroll',\n            overflowX: 'hidden',\n            // overflowY: 'auto',\n            padding: '20px'\n        };\n\n        const messages = this.props.messages.map((message, i) => {\n\n            const messageStyle = {\n                fontSize: '24px',\n                padding: '5px',\n                wordWrap: 'break-word'\n            };\n\n            if (message.type === 'info') Object.assign(messageStyle, info);\n            return <div style={messageStyle} key={i}>\n                {message.text}\n            </div>\n        });\n        return <div style={messagesDiv}>{messages}</div>;\n    }\n}\n\nexport default Messages;"]},"metadata":{},"sourceType":"module"}