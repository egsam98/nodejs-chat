{"ast":null,"code":"import _classCallCheck from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/egor/WebstormProjects/NodeReact/client/src/Chat/Chat.js\";\nimport React from 'react';\nimport Messages from \"./Messages\";\nimport ChatInput from \"./ChatInput\";\nimport Login from './Login';\nimport openSocket from 'socket.io-client';\nimport UserOnline from \"./UserOnline\";\nimport { BrowserRouter as Router, Route, Switch, Redirect, Link } from \"react-router-dom\";\nimport Private from './Private';\nimport Room from \"./Room\"; // import Cookies from \"universal-cookie\";\n\nvar Chat =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  function Chat(props) {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chat).call(this, props));\n\n    _this.createRoom = function (nickname) {\n      _this.socket = openSocket('http://localhost:5000/room?nickname=' + nickname);\n\n      _this.socket.on('userConnected', function (message) {\n        console.log('Websocket: broadcast from \\'room\\' namespace \\'connected\\' channel:', message);\n\n        _this.updateUsersOnline(message.data.usersOnline);\n\n        _this.updateMessages(message);\n      });\n\n      _this.socket.on('message', function (message) {\n        console.log('Websocket: broadcast from \\'room\\' namespace \\'message\\' channel:', message);\n\n        _this.updateMessages(message);\n      });\n\n      _this.socket.on('userDisconnected', function (message) {\n        console.log('Websocket: broadcast from \\'room\\' namespace \\'userDisconnected\\' channel:', message);\n\n        _this.updateUsersOnline(message.data.usersOnline);\n\n        _this.updateMessages(message);\n      });\n\n      _this.setState({\n        nav: _this.state.nav.concat({\n          navName: 'ROOM',\n          route: '/'\n        })\n      });\n    };\n\n    _this.createPrivate = function (partner) {\n      fetch('/session/user').then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        var conversationId = data.user.id + '-' + partner.id;\n        console.log(conversationId);\n        _this.socket = openSocket(\"http://localhost:5000/private?conversationId=\".concat(conversationId));\n\n        _this.socket.on('established', function (message) {\n          console.log('Websocket: broadcast from \\'private\\' namespace \\'established\\' channel:', message); // this.updateUsersOnline(message.data.usersOnline);\n\n          _this.setState({\n            nav: _this.state.nav.concat({\n              navName: partner.nickname,\n              route: _this.pathToPrivateChat + partner.nickname\n            })\n          });\n\n          _this.updateMessages(message);\n        });\n\n        _this.socket.on('message', function (message) {\n          console.log('Websocket: broadcast from \\'private\\' namespace \\'message\\' channel:', message);\n\n          _this.updateMessages(message);\n        }); // this.socket.on('demolished', (message) => {\n        //     console.log('Websocket: broadcast from \\'private\\' namespace \\'userDisconnected\\' channel:', message);\n        //     this.updateUsersOnline(message.data.usersOnline);\n        //     this.updateMessages(message);\n        // });\n\n      });\n    };\n\n    _this.sendToServer = function (message) {\n      _this.socket.emit('message', message);\n    };\n\n    _this.updateMessages = function (message) {\n      _this.setState({\n        messages: _this.state.messages.concat(message)\n      });\n    };\n\n    _this.updateUsersOnline = function (users) {\n      _this.setState({\n        usersOnline: users\n      });\n    };\n\n    _this.pathToPrivateChat = '/private/';\n    _this.socket = null;\n    _this.state = {\n      usersOnline: [],\n      messages: [],\n      nav: []\n    };\n    _this.usersOnlineStyle = {\n      float: 'right',\n      width: '400px',\n      height: '600px',\n      border: 'black 2px solid',\n      padding: '20px'\n    };\n    _this.nav = _this.state.nav.map(function (item, i) {\n      return React.createElement(Link, {\n        to: item.route,\n        className: \"nav-item nav-link\",\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, item.navName);\n    });\n    _this.usersOnline = _this.state.usersOnline.map(function (user, i) {\n      return React.createElement(UserOnline, {\n        key: i,\n        user: user,\n        path: _this.pathToPrivateChat,\n        createPrivate: _this.createPrivate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n    });\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-expand-lg navbar-light bg-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"navbar-brand\",\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Chat\")), React.createElement(\"button\", {\n        className: \"navbar-toggler\",\n        type: \"button\",\n        \"data-toggle\": \"collapse\",\n        \"data-target\": \"#navbarNavAltMarkup\",\n        \"aria-controls\": \"navbarNavAltMarkup\",\n        \"aria-expanded\": \"false\",\n        \"aria-label\": \"Toggle navigation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"navbar-toggler-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"collapse navbar-collapse\",\n        id: \"navbarNavAltMarkup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, this.nav))), React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"\".concat(this.pathToPrivateChat, \":id\"),\n        render: function render(props) {\n          return React.createElement(Private, Object.assign({}, props, {\n            createPrivate: _this2.createPrivate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(Redirect, {\n        from: '/:path',\n        to: '/',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: '/',\n        component: Room,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport default Chat;","map":{"version":3,"sources":["/home/egor/WebstormProjects/NodeReact/client/src/Chat/Chat.js"],"names":["React","Messages","ChatInput","Login","openSocket","UserOnline","BrowserRouter","Router","Route","Switch","Redirect","Link","Private","Room","Chat","props","createRoom","nickname","socket","on","message","console","log","updateUsersOnline","data","usersOnline","updateMessages","setState","nav","state","concat","navName","route","createPrivate","partner","fetch","then","res","json","conversationId","user","id","pathToPrivateChat","sendToServer","emit","messages","users","usersOnlineStyle","float","width","height","border","padding","map","item","i","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Messages from \"./Messages\";\nimport ChatInput from \"./ChatInput\";\nimport Login from './Login';\nimport openSocket from 'socket.io-client';\nimport UserOnline from \"./UserOnline\";\nimport {BrowserRouter as Router, Route, Switch, Redirect, Link} from \"react-router-dom\";\nimport Private from './Private';\nimport Room from \"./Room\";\n// import Cookies from \"universal-cookie\";\n\nclass Chat extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.pathToPrivateChat = '/private/';\n        this.socket = null;\n        this.state = {\n            usersOnline: [],\n            messages: [],\n            nav: []\n        };\n        this.usersOnlineStyle = {\n            float: 'right',\n            width: '400px',\n            height: '600px',\n            border: 'black 2px solid',\n            padding: '20px'\n        };\n        this.nav = this.state.nav.map((item, i) => {\n            return <Link to={item.route} className=\"nav-item nav-link\" key={i}>{item.navName}</Link>\n        });\n        this.usersOnline = this.state.usersOnline.map((user, i) => {\n            return <UserOnline key={i} user={user} path={this.pathToPrivateChat} createPrivate={this.createPrivate} />\n        });\n    }\n\n    createRoom = (nickname) => {\n        this.socket = openSocket('http://localhost:5000/room?nickname=' + nickname);\n        this.socket.on('userConnected', (message) => {\n            console.log('Websocket: broadcast from \\'room\\' namespace \\'connected\\' channel:', message);\n            this.updateUsersOnline(message.data.usersOnline);\n            this.updateMessages(message);\n        });\n        this.socket.on('message', (message) => {\n            console.log('Websocket: broadcast from \\'room\\' namespace \\'message\\' channel:', message);\n            this.updateMessages(message);\n        });\n        this.socket.on('userDisconnected', (message) => {\n            console.log('Websocket: broadcast from \\'room\\' namespace \\'userDisconnected\\' channel:', message);\n            this.updateUsersOnline(message.data.usersOnline);\n            this.updateMessages(message);\n        });\n\n        this.setState({nav: this.state.nav.concat({\n            navName:'ROOM',\n            route: '/'\n        })})\n    };\n\n    createPrivate = (partner) => {\n        fetch('/session/user').then(res => res.json()).then(data => {\n            let conversationId = (data.user.id + '-' + partner.id);\n            console.log(conversationId);\n            this.socket = openSocket(`http://localhost:5000/private?conversationId=${conversationId}`);\n            this.socket.on('established', (message) => {\n                console.log('Websocket: broadcast from \\'private\\' namespace \\'established\\' channel:', message);\n                // this.updateUsersOnline(message.data.usersOnline);\n                this.setState({nav: this.state.nav.concat({\n                    navName: partner.nickname,\n                    route: this.pathToPrivateChat+partner.nickname\n                })});\n                this.updateMessages(message);\n            });\n            this.socket.on('message', (message) => {\n                console.log('Websocket: broadcast from \\'private\\' namespace \\'message\\' channel:', message);\n                this.updateMessages(message);\n            });\n            // this.socket.on('demolished', (message) => {\n            //     console.log('Websocket: broadcast from \\'private\\' namespace \\'userDisconnected\\' channel:', message);\n            //     this.updateUsersOnline(message.data.usersOnline);\n            //     this.updateMessages(message);\n            // });\n        });\n    };\n\n    sendToServer = (message) => {\n        this.socket.emit('message', message);\n    };\n\n    updateMessages = (message) => {\n        this.setState({messages: this.state.messages.concat(message)});\n    };\n\n    updateUsersOnline = (users) => {\n        this.setState({usersOnline: users});\n    };\n\n    render() {\n        return(\n            <div>\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                    <a className=\"navbar-brand\" href=\"#\">\n                        <h3>Chat</h3>\n                    </a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\"\n                            aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\" />\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n                        <div className=\"navbar-nav\">\n                            {this.nav}\n                        </div>\n                    </div>\n                </nav>\n                <Router>\n                    <Switch>\n                        <Route path={`${this.pathToPrivateChat}:id`}\n                               render={(props) => <Private {...props} createPrivate={this.createPrivate}/>}/>\n                        <Redirect from={'/:path'} to={'/'} />\n                        <Route path={'/'} component={Room} />\n                    </Switch>\n                </Router>\n\n            </div>\n        );\n    }\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}