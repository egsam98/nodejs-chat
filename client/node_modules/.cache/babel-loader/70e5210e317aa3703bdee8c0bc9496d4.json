{"ast":null,"code":"import _classCallCheck from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/egor/WebstormProjects/NodeReact/client/src/Chat/UserOnline.js\";\nimport React from 'react';\n\nvar UserOnline =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserOnline, _React$Component);\n\n  function UserOnline(props) {\n    var _this;\n\n    _classCallCheck(this, UserOnline);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserOnline).call(this, props));\n\n    _this.toggleMenu = function () {\n      console.log('CLICKED');\n\n      _this.setState({\n        toggleMenu: !_this.state.toggleMenu\n      });\n\n      return false;\n    };\n\n    _this.handleOutsideClick = function (event) {\n      console.log(_this.aRef);\n      console.log(event.target);\n      console.log(_this.aRef.current == event.target);\n\n      if (_this.aRef === event.target) {\n        return;\n      }\n\n      _this.toggleMenu();\n    };\n\n    _this.aRef = React.createRef();\n    _this.toggleMenu = _this.toggleMenu.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleOutsideClick = _this.handleOutsideClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      toggleMenu: false\n    };\n    return _this;\n  }\n\n  _createClass(UserOnline, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener('click', this.handleOutsideClick, false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var divStyle = {\n        position: 'absolute',\n        display: this.state.toggleMenu ? 'block' : 'none',\n        border: 'black 1px solid',\n        minWidth: '160px',\n        boxShadow: '0px 8px 16px 0px rgba(0,0,0,0.2)',\n        backgroundColor: 'white',\n        zIndex: 1\n      };\n      return React.createElement(\"a\", {\n        ref: this.aRef,\n        onClick: this.toggleMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.props.user.avatar,\n        style: {\n          cursor: 'pointer'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), this.props.user.nickname, React.createElement(\"div\", {\n        style: divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"TEST\"));\n    }\n  }]);\n\n  return UserOnline;\n}(React.Component);\n\nexport default UserOnline;","map":{"version":3,"sources":["/home/egor/WebstormProjects/NodeReact/client/src/Chat/UserOnline.js"],"names":["React","UserOnline","props","toggleMenu","console","log","setState","state","handleOutsideClick","event","aRef","target","current","createRef","bind","document","addEventListener","divStyle","position","display","border","minWidth","boxShadow","backgroundColor","zIndex","user","avatar","cursor","nickname","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,U;;;;;AAEF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,oFAAMA,KAAN;;AADe,UAcnBC,UAdmB,GAcN,YAAM;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AACA,YAAKC,QAAL,CAAc;AAACH,QAAAA,UAAU,EAAE,CAAC,MAAKI,KAAL,CAAWJ;AAAzB,OAAd;;AACA,aAAO,KAAP;AACH,KAlBkB;;AAAA,UAqBnBK,kBArBmB,GAqBE,UAACC,KAAD,EAAW;AAC5BL,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKK,IAAjB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAK,CAACE,MAAlB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKK,IAAL,CAAUE,OAAV,IAAqBH,KAAK,CAACE,MAAvC;;AACA,UAAI,MAAKD,IAAL,KAAcD,KAAK,CAACE,MAAxB,EAAgC;AAC5B;AACH;;AACD,YAAKR,UAAL;AACH,KA7BkB;;AAEf,UAAKO,IAAL,GAAYV,KAAK,CAACa,SAAN,EAAZ;AACA,UAAKV,UAAL,GAAkB,MAAKA,UAAL,CAAgBW,IAAhB,uDAAlB;AACA,UAAKN,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBM,IAAxB,uDAA1B;AACA,UAAKP,KAAL,GAAa;AACTJ,MAAAA,UAAU,EAAE;AADH,KAAb;AALe;AAQlB;;;;wCAEmB;AAChBY,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKR,kBAAxC,EAA4D,KAA5D;AACH;;;6BAmBQ;AAEL,UAAMS,QAAQ,GAAG;AACbC,QAAAA,QAAQ,EAAE,UADG;AAEbC,QAAAA,OAAO,EAAE,KAAKZ,KAAL,CAAWJ,UAAX,GAAwB,OAAxB,GAAiC,MAF7B;AAGbiB,QAAAA,MAAM,EAAE,iBAHK;AAIbC,QAAAA,QAAQ,EAAE,OAJG;AAKbC,QAAAA,SAAS,EAAE,kCALE;AAMbC,QAAAA,eAAe,EAAE,OANJ;AAObC,QAAAA,MAAM,EAAE;AAPK,OAAjB;AAUA,aACI;AAAG,QAAA,GAAG,EAAE,KAAKd,IAAb;AAAmB,QAAA,OAAO,EAAE,KAAKP,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAE,KAAKD,KAAL,CAAWuB,IAAX,CAAgBC,MAA1B;AAAkC,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE;AAAT,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EACqE,KAAKzB,KAAL,CAAWuB,IAAX,CAAgBG,QADrF,EAEI;AAAK,QAAA,KAAK,EAAEX,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADJ;AAQH;;;;EArDoBjB,KAAK,CAAC6B,S;;AAwD/B,eAAe5B,UAAf","sourcesContent":["import React from 'react';\n\nclass UserOnline extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.aRef = React.createRef();\n        this.toggleMenu = this.toggleMenu.bind(this);\n        this.handleOutsideClick = this.handleOutsideClick.bind(this);\n        this.state = {\n            toggleMenu: false\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener('click', this.handleOutsideClick, false);\n    }\n\n    toggleMenu = () => {\n        console.log('CLICKED')\n        this.setState({toggleMenu: !this.state.toggleMenu});\n        return false\n    };\n\n\n    handleOutsideClick = (event) => {\n        console.log(this.aRef);\n        console.log(event.target);\n        console.log(this.aRef.current == event.target)\n        if (this.aRef === event.target) {\n            return;\n        }\n        this.toggleMenu();\n    };\n\n    render() {\n\n        const divStyle = {\n            position: 'absolute',\n            display: this.state.toggleMenu ? 'block': 'none',\n            border: 'black 1px solid',\n            minWidth: '160px',\n            boxShadow: '0px 8px 16px 0px rgba(0,0,0,0.2)',\n            backgroundColor: 'white',\n            zIndex: 1\n        };\n\n        return (\n            <a ref={this.aRef} onClick={this.toggleMenu}>\n                <img src={this.props.user.avatar} style={{cursor: 'pointer'}} />{this.props.user.nickname}\n                <div style={divStyle}>\n                    TEST\n                </div>\n            </a>\n        )\n    }\n}\n\nexport default UserOnline;"]},"metadata":{},"sourceType":"module"}