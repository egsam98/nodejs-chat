{"ast":null,"code":"import _regeneratorRuntime from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/egor/WebstormProjects/NodeReact/client/src/Chat/Chat.js\";\nimport React from 'react';\nimport Messages, { updateMessage } from \"./Messages\";\nimport ChatInput from \"./ChatInput\";\nimport Login from './Login';\nvar connection = null;\n\nvar createWebsocketConnection = function createWebsocketConnection() {\n  connection = new WebSocket('ws://127.0.0.1:5000');\n\n  connection.onopen = function () {\n    console.log('HELLO');\n  };\n\n  connection.onerror = function (error) {\n    console.log(error);\n  };\n\n  connection.onmessage = function (message) {\n    updateMessage(message.data);\n  };\n};\n\nvar Chat =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  function Chat() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Chat)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.send = function () {\n      connection.send(document.querySelector('textarea').value);\n      document.querySelector('textarea').value = '';\n    };\n\n    _this.callBackendAPI =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/index');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              return _context.abrupt(\"return\", body);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Login, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(Messages, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(ChatInput, {\n        sendFunction: this.send,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport default Chat;\nexport { createWebsocketConnection };","map":{"version":3,"sources":["/home/egor/WebstormProjects/NodeReact/client/src/Chat/Chat.js"],"names":["React","Messages","updateMessage","ChatInput","Login","connection","createWebsocketConnection","WebSocket","onopen","console","log","onerror","error","onmessage","message","data","Chat","send","document","querySelector","value","callBackendAPI","fetch","response","json","body","status","Error","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAkBC,aAAlB,QAAsC,YAAtC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,IAAIC,UAAU,GAAG,IAAjB;;AACA,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,GAAM;AACpCD,EAAAA,UAAU,GAAG,IAAIE,SAAJ,CAAc,qBAAd,CAAb;;AACAF,EAAAA,UAAU,CAACG,MAAX,GAAoB,YAAW;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,GAFD;;AAGAL,EAAAA,UAAU,CAACM,OAAX,GAAqB,UAAUC,KAAV,EAAiB;AAClCH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,GAFD;;AAGAP,EAAAA,UAAU,CAACQ,SAAX,GAAuB,UAAUC,OAAV,EAAmB;AACtCZ,IAAAA,aAAa,CAACY,OAAO,CAACC,IAAT,CAAb;AACH,GAFD;AAGH,CAXD;;IAaMC,I;;;;;;;;;;;;;;;;;;UAEFC,I,GAAO,YAAM;AACTZ,MAAAA,UAAU,CAACY,IAAX,CAAgBC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCC,KAAnD;AACAF,MAAAA,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCC,KAAnC,GAA2C,EAA3C;AACH,K;;UAEDC,c;;;;6BAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACUC,KAAK,CAAC,QAAD,CADf;;AAAA;AACPC,cAAAA,QADO;AAAA;AAAA,qBAEMA,QAAQ,CAACC,IAAT,EAFN;;AAAA;AAEPC,cAAAA,IAFO;;AAAA,oBAITF,QAAQ,CAACG,MAAT,KAAoB,GAJX;AAAA;AAAA;AAAA;;AAAA,oBAKHC,KAAK,CAACF,IAAI,CAACX,OAAN,CALF;;AAAA;AAAA,+CAONW,IAPM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;6BAUR;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAE,KAAKR,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ;AAMH;;;;EAxBcjB,KAAK,CAAC4B,S;;AA2BzB,eAAeZ,IAAf;AACA,SAAQV,yBAAR","sourcesContent":["import React from 'react';\nimport Messages, {updateMessage} from \"./Messages\";\nimport ChatInput from \"./ChatInput\";\nimport Login from './Login';\n\nlet connection = null;\nconst createWebsocketConnection = () => {\n    connection = new WebSocket('ws://127.0.0.1:5000');\n    connection.onopen = function() {\n        console.log('HELLO');\n    };\n    connection.onerror = function (error) {\n        console.log(error);\n    };\n    connection.onmessage = function (message) {\n        updateMessage(message.data);\n    };\n};\n\nclass Chat extends React.Component{\n\n    send = () => {\n        connection.send(document.querySelector('textarea').value);\n        document.querySelector('textarea').value = '';\n    };\n\n    callBackendAPI = async () => {\n        const response = await fetch('/index');\n        const body = await response.json();\n\n        if (response.status !== 200) {\n            throw Error(body.message)\n        }\n        return body;\n    };\n\n    render() {\n        return (\n            <div>\n                <Login />\n                <Messages />\n                <ChatInput sendFunction={this.send} />\n            </div>);\n    }\n}\n\nexport default Chat;\nexport {createWebsocketConnection};"]},"metadata":{},"sourceType":"module"}