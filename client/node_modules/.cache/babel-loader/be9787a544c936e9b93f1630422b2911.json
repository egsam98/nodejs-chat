{"ast":null,"code":"import _classCallCheck from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/egor/WebstormProjects/NodeReact/client/src/Chat/Chat.js\";\nimport React from 'react';\nimport Messages from \"./Messages\";\nimport ChatInput from \"./ChatInput\";\nimport Login from './Login';\nimport openSocket from 'socket.io-client';\nimport UserOnline from \"./UserOnline\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Test from './PrivateRoom/Test';\n\nvar Chat =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  function Chat() {\n    _classCallCheck(this, Chat);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Chat).apply(this, arguments));\n  }\n\n  _createClass(Chat, [{\n    key: \"render\",\n    // constructor(props) {\n    //     super(props);\n    //     this.socket = null;\n    //     this.state = {\n    //         usersOnline: [],\n    //         messages: []\n    //     };\n    // }\n    //\n    // createWS = (nickname) => {\n    //     this.socket = openSocket('http://localhost:5000?nickname=' + nickname);\n    //     this.socket.on('userConnected', (message) => {\n    //         console.log('Websocket: broadcast from \\'userConnected\\' channel:', message);\n    //         this.updateUsersOnline(message.data.usersOnline);\n    //         this.updateMessages(message);\n    //     });\n    //     this.socket.on('message', (message) => {\n    //         console.log('Websocket: broadcast from \\'message\\' channel:', message);\n    //         this.updateMessages(message);\n    //     });\n    //     this.socket.on('userDisconnected', (message) => {\n    //         console.log('Websocket: broadcast from \\'userDisconnected\\' channel:', message);\n    //         this.updateUsersOnline(message.data.usersOnline);\n    //         this.updateMessages(message);\n    //     });\n    // };\n    //\n    // sendToServer = (message) => {\n    //     this.socket.emit('message', message);\n    // };\n    //\n    // updateMessages = (message) => {\n    //     this.setState({messages: this.state.messages.concat(message)});\n    // };\n    //\n    // updateUsersOnline = (users) => {\n    //     this.setState({usersOnline: users});\n    // };\n    value: function render() {\n      // const usersOnlineStyle = {\n      //     float: 'right',\n      //     width: '400px',\n      //     height: '600px',\n      //     border: 'black 2px solid',\n      //     padding: '20px'\n      // };\n      //\n      // const usersOnline = this.state.usersOnline.map((user, i) => {\n      //     return <Route path={`${this.props.match.path}/a`}>\n      //             <UserOnline key={i} user={user}/>\n      //         </Route>\n      // });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"\".concat(this.props.match.path, \"/a\"),\n        component: Test,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport default Chat;","map":{"version":3,"sources":["/home/egor/WebstormProjects/NodeReact/client/src/Chat/Chat.js"],"names":["React","Messages","ChatInput","Login","openSocket","UserOnline","BrowserRouter","Router","Route","Switch","Test","Chat","props","match","path","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,KAAjC,EAAwCC,MAAxC,QAAqD,kBAArD;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;IAEMC,I;;;;;;;;;;;;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;6BAES;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,YAAK,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,IAAtB,OAAX;AAA2C,QAAA,SAAS,EAAEJ,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAWH;;;;EAlEcV,KAAK,CAACe,S;;AAqEzB,eAAeJ,IAAf","sourcesContent":["import React from 'react';\nimport Messages from \"./Messages\";\nimport ChatInput from \"./ChatInput\";\nimport Login from './Login';\nimport openSocket from 'socket.io-client';\nimport UserOnline from \"./UserOnline\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Test from './PrivateRoom/Test';\n\nclass Chat extends React.Component{\n\n    // constructor(props) {\n    //     super(props);\n    //     this.socket = null;\n    //     this.state = {\n    //         usersOnline: [],\n    //         messages: []\n    //     };\n    // }\n    //\n    // createWS = (nickname) => {\n    //     this.socket = openSocket('http://localhost:5000?nickname=' + nickname);\n    //     this.socket.on('userConnected', (message) => {\n    //         console.log('Websocket: broadcast from \\'userConnected\\' channel:', message);\n    //         this.updateUsersOnline(message.data.usersOnline);\n    //         this.updateMessages(message);\n    //     });\n    //     this.socket.on('message', (message) => {\n    //         console.log('Websocket: broadcast from \\'message\\' channel:', message);\n    //         this.updateMessages(message);\n    //     });\n    //     this.socket.on('userDisconnected', (message) => {\n    //         console.log('Websocket: broadcast from \\'userDisconnected\\' channel:', message);\n    //         this.updateUsersOnline(message.data.usersOnline);\n    //         this.updateMessages(message);\n    //     });\n    // };\n    //\n    // sendToServer = (message) => {\n    //     this.socket.emit('message', message);\n    // };\n    //\n    // updateMessages = (message) => {\n    //     this.setState({messages: this.state.messages.concat(message)});\n    // };\n    //\n    // updateUsersOnline = (users) => {\n    //     this.setState({usersOnline: users});\n    // };\n\n    render() {\n        // const usersOnlineStyle = {\n        //     float: 'right',\n        //     width: '400px',\n        //     height: '600px',\n        //     border: 'black 2px solid',\n        //     padding: '20px'\n        // };\n        //\n        // const usersOnline = this.state.usersOnline.map((user, i) => {\n        //     return <Route path={`${this.props.match.path}/a`}>\n        //             <UserOnline key={i} user={user}/>\n        //         </Route>\n        // });\n        return(\n            <div>\n                <Route path={`${this.props.match.path}/a`} component={Test}/>\n                {/*<Login createWS={this.createWS} />*/}\n                {/*<div style={usersOnlineStyle}>*/}\n                    {/*{usersOnline}*/}\n                {/*</div>*/}\n                {/*<Messages messages={this.state.messages} />*/}\n                {/*<ChatInput sendToServer={this.sendToServer} />*/}\n            </div>\n        );\n    }\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}