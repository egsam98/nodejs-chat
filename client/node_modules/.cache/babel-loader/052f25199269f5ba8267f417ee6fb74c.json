{"ast":null,"code":"import _regeneratorRuntime from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/egor/WebstormProjects/NodeReact/client/src/Chat/Chat.js\";\nimport React from 'react';\nimport Messages, { updateMessages } from \"./Messages\";\nimport ChatInput from \"./ChatInput\";\nimport Login from './Login';\n\nvar Chat =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  function Chat(props) {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chat).call(this, props));\n    _this.connection = null;\n\n    _this.createWebsocketConnection = function () {\n      _this.connection = new WebSocket('ws://127.0.0.1:5000');\n\n      _this.connection.onopen = function () {\n        console.log('HELLO');\n      };\n\n      _this.connection.onerror = function (error) {\n        console.log(error);\n      };\n\n      _this.connection.onmessage = function (message) {\n        updateMessages(message.data);\n      };\n    };\n\n    _this.send = function () {\n      _this.connection.send(document.querySelector('textarea').value);\n\n      document.querySelector('textarea').value = '';\n    };\n\n    _this.callBackendAPI =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/index');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              return _context.abrupt(\"return\", body);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    var _updateMessages = _updateMessages.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Login, {\n        createWebsocketConnection: this.createWebsocketConnection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Messages, {\n        updateMessagesFunction: updateMessages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(ChatInput, {\n        sendFunction: this.send,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport default Chat;\nexport { updateMessages };","map":{"version":3,"sources":["/home/egor/WebstormProjects/NodeReact/client/src/Chat/Chat.js"],"names":["React","Messages","updateMessages","ChatInput","Login","Chat","props","connection","createWebsocketConnection","WebSocket","onopen","console","log","onerror","error","onmessage","message","data","send","document","querySelector","value","callBackendAPI","fetch","response","json","body","status","Error","bind","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAkBC,cAAlB,QAAuC,YAAvC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;IAEMC,I;;;;;AAEF,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8EAAMA,KAAN;AADe,UAKnBC,UALmB,GAKN,IALM;;AAAA,UAOnBC,yBAPmB,GAOS,YAAM;AAC9B,YAAKD,UAAL,GAAkB,IAAIE,SAAJ,CAAc,qBAAd,CAAlB;;AACA,YAAKF,UAAL,CAAgBG,MAAhB,GAAyB,YAAW;AAChCC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,OAFD;;AAGA,YAAKL,UAAL,CAAgBM,OAAhB,GAA0B,UAAUC,KAAV,EAAiB;AACvCH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,OAFD;;AAGA,YAAKP,UAAL,CAAgBQ,SAAhB,GAA4B,UAAUC,OAAV,EAAmB;AAC3Cd,QAAAA,cAAc,CAACc,OAAO,CAACC,IAAT,CAAd;AACH,OAFD;AAGH,KAlBkB;;AAAA,UAoBnBC,IApBmB,GAoBZ,YAAM;AACT,YAAKX,UAAL,CAAgBW,IAAhB,CAAqBC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCC,KAAxD;;AACAF,MAAAA,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCC,KAAnC,GAA2C,EAA3C;AACH,KAvBkB;;AAAA,UA0BnBC,cA1BmB;AAAA;AAAA;AAAA;AAAA,6BA0BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACUC,KAAK,CAAC,QAAD,CADf;;AAAA;AACPC,cAAAA,QADO;AAAA;AAAA,qBAEMA,QAAQ,CAACC,IAAT,EAFN;;AAAA;AAEPC,cAAAA,IAFO;;AAAA,oBAITF,QAAQ,CAACG,MAAT,KAAoB,GAJX;AAAA;AAAA;AAAA;;AAAA,oBAKHC,KAAK,CAACF,IAAI,CAACV,OAAN,CALF;;AAAA;AAAA,+CAONU,IAPM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA1BE;;AAEf,QAAIxB,eAAc,GAAGA,eAAc,CAAC2B,IAAf,uDAArB;;AAFe;AAGlB;;;;6BAiCQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,yBAAyB,EAAE,KAAKrB,yBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,QAAD;AAAU,QAAA,sBAAsB,EAAEN,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAE,KAAKgB,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ;AAMH;;;;EA7CclB,KAAK,CAAC8B,S;;AAgDzB,eAAezB,IAAf;AACA,SAAQH,cAAR","sourcesContent":["import React from 'react';\nimport Messages, {updateMessages} from \"./Messages\";\nimport ChatInput from \"./ChatInput\";\nimport Login from './Login';\n\nclass Chat extends React.Component{\n\n    constructor(props) {\n        super(props);\n        let updateMessages = updateMessages.bind(this);\n    }\n\n    connection = null;\n\n    createWebsocketConnection = () => {\n        this.connection = new WebSocket('ws://127.0.0.1:5000');\n        this.connection.onopen = function() {\n            console.log('HELLO');\n        };\n        this.connection.onerror = function (error) {\n            console.log(error);\n        };\n        this.connection.onmessage = function (message) {\n            updateMessages(message.data);\n        };\n    };\n\n    send = () => {\n        this.connection.send(document.querySelector('textarea').value);\n        document.querySelector('textarea').value = '';\n    };\n\n\n    callBackendAPI = async () => {\n        const response = await fetch('/index');\n        const body = await response.json();\n\n        if (response.status !== 200) {\n            throw Error(body.message)\n        }\n        return body;\n    };\n\n    render() {\n        return (\n            <div>\n                <Login createWebsocketConnection={this.createWebsocketConnection} />\n                <Messages updateMessagesFunction={updateMessages} />\n                <ChatInput sendFunction={this.send} />\n            </div>);\n    }\n}\n\nexport default Chat;\nexport {updateMessages};"]},"metadata":{},"sourceType":"module"}