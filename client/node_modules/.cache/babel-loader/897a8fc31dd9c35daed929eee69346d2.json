{"ast":null,"code":"import _regeneratorRuntime from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/egor/WebstormProjects/NodeReact/client/src/ChatInput.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport msgArr from './Messages';\n\nvar ChatInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChatInput, _Component);\n\n  function ChatInput(props) {\n    var _this;\n\n    _classCallCheck(this, ChatInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatInput).call(this, props));\n    _this.callBackendAPI =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/index');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              return _context.abrupt(\"return\", body);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.state.connection = props.connection;\n    return _this;\n  }\n\n  _createClass(ChatInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.callBackendAPI().then(function (res) {\n        return _this2.setState({\n          data: res.express\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    // setWebsocket = () => {\n    //     const connection = new WebSocket('ws://127.0.0.1:5000');\n    //     connection.onopen = function(){\n    //         console.log('HELLO');\n    //     };\n    //     connection.onerror = function (error) {\n    //         console.log(error);\n    //     };\n    //     connection.onmessage = function (message) {\n    //\n    //     };\n    //     return connection;\n    // };\n    // connection = this.setWebsocket();\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"row d-flex justify-content-center mb-5 fixed-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"col-md-6 pt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"col-md-1\",\n        onClick: function onClick() {\n          return _this3.state.connection.send(document.querySelector('textarea').value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"));\n    }\n  }]);\n\n  return ChatInput;\n}(Component);\n\nexport default ChatInput;","map":{"version":3,"sources":["/home/egor/WebstormProjects/NodeReact/client/src/ChatInput.js"],"names":["React","Component","ReactDOM","msgArr","ChatInput","props","callBackendAPI","fetch","response","json","body","status","Error","message","state","connection","then","res","setState","data","express","catch","err","console","log","send","document","querySelector","value"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,YAAnB;;IAEMC,S;;;;;AAEF,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,mFAAMA,KAAN;AADc,UAWlBC,cAXkB;AAAA;AAAA;AAAA;AAAA,6BAWD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACUC,KAAK,CAAC,QAAD,CADf;;AAAA;AACPC,cAAAA,QADO;AAAA;AAAA,qBAEMA,QAAQ,CAACC,IAAT,EAFN;;AAAA;AAEPC,cAAAA,IAFO;;AAAA,oBAITF,QAAQ,CAACG,MAAT,KAAoB,GAJX;AAAA;AAAA;AAAA;;AAAA,oBAKHC,KAAK,CAACF,IAAI,CAACG,OAAN,CALF;;AAAA;AAAA,+CAONH,IAPM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAXC;AAEd,UAAKI,KAAL,CAAWC,UAAX,GAAwBV,KAAK,CAACU,UAA9B;AAFc;AAGjB;;;;wCAEmB;AAAA;;AAChB,WAAKT,cAAL,GACKU,IADL,CACU,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAAEC,UAAAA,IAAI,EAAEF,GAAG,CAACG;AAAZ,SAAd,CAAJ;AAAA,OADb,EAEKC,KAFL,CAEW,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAFd;AAGH;;;AAYD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;6BAES;AAAA;;AACL,aACI;AAAK,QAAA,SAAS,EAAC,qDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAU,QAAA,SAAS,EAAC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAA6B,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACR,KAAL,CAAWC,UAAX,CAAsBU,IAAtB,CAA2BC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCC,KAA9D,CAAN;AAAA,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAFJ,CADJ;AAOH;;;;EA/CmB3B,S;;AAkDxB,eAAeG,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport msgArr from './Messages';\n\nclass ChatInput extends Component {\n\n    constructor(props){\n        super(props);\n        this.state.connection = props.connection;\n    }\n\n    componentDidMount() {\n        this.callBackendAPI()\n            .then(res => this.setState({ data: res.express }))\n            .catch(err => console.log(err));\n    }\n\n    callBackendAPI = async () => {\n        const response = await fetch('/index');\n        const body = await response.json();\n\n        if (response.status !== 200) {\n            throw Error(body.message)\n        }\n        return body;\n    };\n\n    // setWebsocket = () => {\n    //     const connection = new WebSocket('ws://127.0.0.1:5000');\n    //     connection.onopen = function(){\n    //         console.log('HELLO');\n    //     };\n    //     connection.onerror = function (error) {\n    //         console.log(error);\n    //     };\n    //     connection.onmessage = function (message) {\n    //\n    //     };\n    //     return connection;\n    // };\n\n    // connection = this.setWebsocket();\n\n    render() {\n        return (\n            <div className=\"row d-flex justify-content-center mb-5 fixed-bottom\">\n                <textarea className=\"col-md-6 pt-2\"></textarea>\n                <button className=\"col-md-1\" onClick={() => this.state.connection.send(document.querySelector('textarea').value)\n                    }>Отправить</button>\n            </div>\n        );\n    }\n}\n\nexport default ChatInput;"]},"metadata":{},"sourceType":"module"}