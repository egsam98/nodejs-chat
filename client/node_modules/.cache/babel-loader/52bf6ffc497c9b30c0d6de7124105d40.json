{"ast":null,"code":"import _regeneratorRuntime from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\n\nvar _this = this,\n    _jsxFileName = \"/home/egor/WebstormProjects/NodeReact/client/src/Chat/Chat.js\";\n\nimport React from 'react';\nimport Messages from \"./Messages\";\nimport ChatInput from \"./ChatInput\";\nimport Login from './Login'; // import {updateMessages} from \"./Messages\";\n\nvar updateMessages = function updateMessages(message) {\n  console.log(message);\n\n  _this.setState({\n    message: _this.state.message.concat(React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, message))\n  });\n};\n\nvar Chat =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  function Chat(props) {\n    var _this2;\n\n    _classCallCheck(this, Chat);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Chat).call(this, props)); // this.updateMessages = updateMessages.bind(this);\n    // this.updateMessages = updateMessages.bind(this);\n    // console.log(this.updateMessages);\n\n    _this2.connection = null;\n\n    _this2.createWS = function () {\n      _this2.connection = new WebSocket('ws://127.0.0.1:5000');\n\n      _this2.connection.onopen = function () {\n        console.log('HELLO');\n      };\n\n      _this2.connection.onerror = function (error) {\n        console.log(error);\n      };\n\n      _this2.connection.onmessage = function (message) {\n        console.log(_assertThisInitialized(_assertThisInitialized(_this2)));\n\n        _this2.updateMessages(message.data);\n      }; // return connection;\n\n    };\n\n    _this2.sendToServer = function () {\n      _this2.connection.send(document.querySelector('textarea').value);\n\n      document.querySelector('textarea').value = '';\n    };\n\n    _this2.callBackendAPI =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/index');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              return _context.abrupt(\"return\", body);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    return _this2;\n  }\n\n  _createClass(Chat, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Login, {\n        createWS: this.createWS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Messages, {\n        updateMessages: updateMessages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(ChatInput, {\n        sendToServer: this.sendToServer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport default Chat; // export {updateMessages};","map":{"version":3,"sources":["/home/egor/WebstormProjects/NodeReact/client/src/Chat/Chat.js"],"names":["React","Messages","ChatInput","Login","updateMessages","message","console","log","setState","state","concat","Chat","props","connection","createWS","WebSocket","onopen","onerror","error","onmessage","data","sendToServer","send","document","querySelector","value","callBackendAPI","fetch","response","json","body","status","Error","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD,EAAa;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AACA,EAAA,KAAI,CAACG,QAAL,CAAc;AAACH,IAAAA,OAAO,EAAE,KAAI,CAACI,KAAL,CAAWJ,OAAX,CAAmBK,MAAnB,CAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,OAAL,CAA1B;AAAV,GAAd;AACH,CAHD;;IAKMM,I;;;;;AAEF,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN,GADe,CAEf;AACA;AACA;;AAJe,WAOnBC,UAPmB,GAON,IAPM;;AAAA,WASnBC,QATmB,GASR,YAAM;AACb,aAAKD,UAAL,GAAkB,IAAIE,SAAJ,CAAc,qBAAd,CAAlB;;AACA,aAAKF,UAAL,CAAgBG,MAAhB,GAAyB,YAAW;AAChCV,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,OAFD;;AAGA,aAAKM,UAAL,CAAgBI,OAAhB,GAA0B,UAAUC,KAAV,EAAiB;AACvCZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACH,OAFD;;AAGA,aAAKL,UAAL,CAAgBM,SAAhB,GAA4B,UAACd,OAAD,EAAa;AACrCC,QAAAA,OAAO,CAACC,GAAR;;AACA,eAAKH,cAAL,CAAoBC,OAAO,CAACe,IAA5B;AACH,OAHD,CARa,CAYb;;AACH,KAtBkB;;AAAA,WAwBnBC,YAxBmB,GAwBJ,YAAM;AACjB,aAAKR,UAAL,CAAgBS,IAAhB,CAAqBC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCC,KAAxD;;AACAF,MAAAA,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCC,KAAnC,GAA2C,EAA3C;AACH,KA3BkB;;AAAA,WA8BnBC,cA9BmB;AAAA;AAAA;AAAA;AAAA,6BA8BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACUC,KAAK,CAAC,QAAD,CADf;;AAAA;AACPC,cAAAA,QADO;AAAA;AAAA,qBAEMA,QAAQ,CAACC,IAAT,EAFN;;AAAA;AAEPC,cAAAA,IAFO;;AAAA,oBAITF,QAAQ,CAACG,MAAT,KAAoB,GAJX;AAAA;AAAA;AAAA;;AAAA,oBAKHC,KAAK,CAACF,IAAI,CAACzB,OAAN,CALF;;AAAA;AAAA,+CAONyB,IAPM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA9BE;AAAA;AAKlB;;;;6BAmCQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,QAAQ,EAAE,KAAKhB,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,QAAD;AAAU,QAAA,cAAc,EAAEV,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAE,KAAKiB,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ;AAMH;;;;EAjDcrB,KAAK,CAACiC,S;;AAoDzB,eAAetB,IAAf,C,CACA","sourcesContent":["import React from 'react';\nimport Messages from \"./Messages\";\nimport ChatInput from \"./ChatInput\";\nimport Login from './Login';\n// import {updateMessages} from \"./Messages\";\n\nconst updateMessages = (message) => {\n    console.log(message);\n    this.setState({message: this.state.message.concat(<h2>{message}</h2>)});\n};\n\nclass Chat extends React.Component{\n\n    constructor(props) {\n        super(props);\n        // this.updateMessages = updateMessages.bind(this);\n        // this.updateMessages = updateMessages.bind(this);\n        // console.log(this.updateMessages);\n    }\n\n    connection = null;\n\n    createWS = () => {\n        this.connection = new WebSocket('ws://127.0.0.1:5000');\n        this.connection.onopen = function() {\n            console.log('HELLO');\n        };\n        this.connection.onerror = function (error) {\n            console.log(error);\n        };\n        this.connection.onmessage = (message) => {\n            console.log(this);\n            this.updateMessages(message.data);\n        };\n        // return connection;\n    };\n\n    sendToServer = () => {\n        this.connection.send(document.querySelector('textarea').value);\n        document.querySelector('textarea').value = '';\n    };\n\n\n    callBackendAPI = async () => {\n        const response = await fetch('/index');\n        const body = await response.json();\n\n        if (response.status !== 200) {\n            throw Error(body.message)\n        }\n        return body;\n    };\n\n    render() {\n        return (\n            <div>\n                <Login createWS={this.createWS}/>\n                <Messages updateMessages={updateMessages}  />\n                <ChatInput sendToServer={this.sendToServer} />\n            </div>);\n    }\n}\n\nexport default Chat;\n// export {updateMessages};"]},"metadata":{},"sourceType":"module"}