{"ast":null,"code":"import _regeneratorRuntime from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/egor/WebstormProjects/NodeReact/client/src/Chat/ChatInput.js\";\nimport React from 'react';\nimport { updateMessage } from './Messages';\nimport Messages from \"./Messages\";\n\nvar ChatInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ChatInput, _React$Component);\n\n  function ChatInput() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ChatInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ChatInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.callBackendAPI =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/index');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              return _context.abrupt(\"return\", body);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.setWebsocket = function () {\n      var connection = new WebSocket('ws://127.0.0.1:5000');\n\n      connection.onopen = function () {\n        console.log('HELLO');\n      };\n\n      connection.onerror = function (error) {\n        console.log(error);\n      };\n\n      connection.onmessage = function (message) {\n        updateMessage(message.data);\n      };\n\n      return connection;\n    };\n\n    _this.connection = _this.setWebsocket();\n\n    _this.send = function () {\n      _this.connection.send(document.querySelector('textarea').value);\n\n      document.querySelector('textarea').value = '';\n    };\n\n    return _this;\n  }\n\n  _createClass(ChatInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"row d-flex justify-content-center mb-5 fixed-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"col-md-6 pt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"col-md-1\",\n        onClick: function onClick() {\n          return _this2.send();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"));\n    }\n  }]);\n\n  return ChatInput;\n}(React.Component);\n\nexport default ChatInput;","map":{"version":3,"sources":["/home/egor/WebstormProjects/NodeReact/client/src/Chat/ChatInput.js"],"names":["React","updateMessage","Messages","ChatInput","callBackendAPI","fetch","response","json","body","status","Error","message","setWebsocket","connection","WebSocket","onopen","console","log","onerror","error","onmessage","data","send","document","querySelector","value","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,QAA4B,YAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;;IAEMC,S;;;;;;;;;;;;;;;;;UAQFC,c;;;;6BAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACUC,KAAK,CAAC,QAAD,CADf;;AAAA;AACPC,cAAAA,QADO;AAAA;AAAA,qBAEMA,QAAQ,CAACC,IAAT,EAFN;;AAAA;AAEPC,cAAAA,IAFO;;AAAA,oBAITF,QAAQ,CAACG,MAAT,KAAoB,GAJX;AAAA;AAAA;AAAA;;AAAA,oBAKHC,KAAK,CAACF,IAAI,CAACG,OAAN,CALF;;AAAA;AAAA,+CAONH,IAPM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAUjBI,Y,GAAe,YAAM;AACjB,UAAMC,UAAU,GAAG,IAAIC,SAAJ,CAAc,qBAAd,CAAnB;;AACAD,MAAAA,UAAU,CAACE,MAAX,GAAoB,YAAU;AAC1BC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,OAFD;;AAGAJ,MAAAA,UAAU,CAACK,OAAX,GAAqB,UAAUC,KAAV,EAAiB;AAClCH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,OAFD;;AAGAN,MAAAA,UAAU,CAACO,SAAX,GAAuB,UAAUT,OAAV,EAAmB;AACtCV,QAAAA,aAAa,CAACU,OAAO,CAACU,IAAT,CAAb;AACH,OAFD;;AAGA,aAAOR,UAAP;AACH,K;;UAEDA,U,GAAa,MAAKD,YAAL,E;;UAEbU,I,GAAO,YAAM;AACT,YAAKT,UAAL,CAAgBS,IAAhB,CAAqBC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCC,KAAxD;;AACAF,MAAAA,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCC,KAAnC,GAA2C,EAA3C;AACH,K;;;;;;;6BAEQ;AAAA;;AACL,aACI;AAAK,QAAA,SAAS,EAAC,qDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAU,QAAA,SAAS,EAAC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAA6B,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACH,IAAL,EAAN;AAAA,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAFJ,CADJ;AAMH;;;;EA9CmBtB,KAAK,CAAC0B,S;;AAiD9B,eAAevB,SAAf","sourcesContent":["import React from 'react';\nimport {updateMessage} from './Messages';\nimport Messages from \"./Messages\";\n\nclass ChatInput extends React.Component {\n\n    // componentDidMount() {\n    //     this.callBackendAPI()\n    //         .then(res => this.setState({ data: res.express }))\n    //         .catch(err => console.log(err));\n    // }\n\n    callBackendAPI = async () => {\n        const response = await fetch('/index');\n        const body = await response.json();\n\n        if (response.status !== 200) {\n            throw Error(body.message)\n        }\n        return body;\n    };\n\n    setWebsocket = () => {\n        const connection = new WebSocket('ws://127.0.0.1:5000');\n        connection.onopen = function(){\n            console.log('HELLO');\n        };\n        connection.onerror = function (error) {\n            console.log(error);\n        };\n        connection.onmessage = function (message) {\n            updateMessage(message.data);\n        };\n        return connection;\n    };\n\n    connection = this.setWebsocket();\n\n    send = () => {\n        this.connection.send(document.querySelector('textarea').value);\n        document.querySelector('textarea').value = '';\n    };\n\n    render() {\n        return (\n            <div className=\"row d-flex justify-content-center mb-5 fixed-bottom\">\n                <textarea className=\"col-md-6 pt-2\"></textarea>\n                <button className=\"col-md-1\" onClick={() => this.send()}>Отправить</button>\n            </div>\n        );\n    }\n}\n\nexport default ChatInput;"]},"metadata":{},"sourceType":"module"}