{"ast":null,"code":"import _regeneratorRuntime from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/egor/WebstormProjects/NodeReact/client/src/Chat/Chat.js\";\nimport React from 'react';\nimport Messages, { updateMessages } from \"./Messages\";\nimport ChatInput from \"./ChatInput\";\nimport Login from './Login';\nvar connection = null;\n\nconnection.onopen = function () {\n  console.log('HELLO');\n};\n\nconnection.onerror = function (error) {\n  console.log(error);\n};\n\nconnection.onmessage = function (message) {\n  console.log(this.updateMessages);\n  updateMessages.bind(this);\n  updateMessages(message.data);\n};\n\nvar Chat =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  function Chat(props) {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chat).call(this, props));\n\n    _this.createWebsocketConnection = function () {\n      _this.connection = new WebSocket('ws://127.0.0.1:5000');\n    };\n\n    _this.send = function () {\n      _this.connection.send(document.querySelector('textarea').value);\n\n      document.querySelector('textarea').value = '';\n    };\n\n    _this.callBackendAPI =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/index');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              return _context.abrupt(\"return\", body);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.updateMessages = updateMessages.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    console.log(_this.updateMessages);\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Login, {\n        createWebsocketConnection: this.createWebsocketConnection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(Messages, {\n        updateMessagesFunction: updateMessages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(ChatInput, {\n        sendFunction: this.send,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport default Chat;\nexport { updateMessages };","map":{"version":3,"sources":["/home/egor/WebstormProjects/NodeReact/client/src/Chat/Chat.js"],"names":["React","Messages","updateMessages","ChatInput","Login","connection","onopen","console","log","onerror","error","onmessage","message","bind","data","Chat","props","createWebsocketConnection","WebSocket","send","document","querySelector","value","callBackendAPI","fetch","response","json","body","status","Error","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAkBC,cAAlB,QAAuC,YAAvC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAGA,IAAIC,UAAU,GAAG,IAAjB;;AACAA,UAAU,CAACC,MAAX,GAAoB,YAAW;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,CAFD;;AAGAH,UAAU,CAACI,OAAX,GAAqB,UAAUC,KAAV,EAAiB;AAClCH,EAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,CAFD;;AAGAL,UAAU,CAACM,SAAX,GAAuB,UAAUC,OAAV,EAAmB;AACtCL,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,cAAjB;AACAA,EAAAA,cAAc,CAACW,IAAf,CAAoB,IAApB;AACAX,EAAAA,cAAc,CAACU,OAAO,CAACE,IAAT,CAAd;AACH,CAJD;;IAMMC,I;;;;;AAEF,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8EAAMA,KAAN;;AADe,UAMnBC,yBANmB,GAMS,YAAM;AAC9B,YAAKZ,UAAL,GAAkB,IAAIa,SAAJ,CAAc,qBAAd,CAAlB;AAEH,KATkB;;AAAA,UAWnBC,IAXmB,GAWZ,YAAM;AACT,YAAKd,UAAL,CAAgBc,IAAhB,CAAqBC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCC,KAAxD;;AACAF,MAAAA,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCC,KAAnC,GAA2C,EAA3C;AACH,KAdkB;;AAAA,UAiBnBC,cAjBmB;AAAA;AAAA;AAAA;AAAA,6BAiBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACUC,KAAK,CAAC,QAAD,CADf;;AAAA;AACPC,cAAAA,QADO;AAAA;AAAA,qBAEMA,QAAQ,CAACC,IAAT,EAFN;;AAAA;AAEPC,cAAAA,IAFO;;AAAA,oBAITF,QAAQ,CAACG,MAAT,KAAoB,GAJX;AAAA;AAAA;AAAA;;AAAA,oBAKHC,KAAK,CAACF,IAAI,CAACf,OAAN,CALF;;AAAA;AAAA,+CAONe,IAPM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAjBE;AAEf,UAAKzB,cAAL,GAAsBA,cAAc,CAACW,IAAf,uDAAtB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAKN,cAAjB;AAHe;AAIlB;;;;6BAuBQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,yBAAyB,EAAE,KAAKe,yBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,QAAD;AAAU,QAAA,sBAAsB,EAAEf,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAE,KAAKiB,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ;AAMH;;;;EApCcnB,KAAK,CAAC8B,S;;AAuCzB,eAAef,IAAf;AACA,SAAQb,cAAR","sourcesContent":["import React from 'react';\nimport Messages, {updateMessages} from \"./Messages\";\nimport ChatInput from \"./ChatInput\";\nimport Login from './Login';\n\n\nlet connection = null;\nconnection.onopen = function() {\n    console.log('HELLO');\n};\nconnection.onerror = function (error) {\n    console.log(error);\n};\nconnection.onmessage = function (message) {\n    console.log(this.updateMessages);\n    updateMessages.bind(this);\n    updateMessages(message.data);\n};\n\nclass Chat extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.updateMessages = updateMessages.bind(this);\n        console.log(this.updateMessages);\n    }\n\n    createWebsocketConnection = () => {\n        this.connection = new WebSocket('ws://127.0.0.1:5000');\n\n    };\n\n    send = () => {\n        this.connection.send(document.querySelector('textarea').value);\n        document.querySelector('textarea').value = '';\n    };\n\n\n    callBackendAPI = async () => {\n        const response = await fetch('/index');\n        const body = await response.json();\n\n        if (response.status !== 200) {\n            throw Error(body.message)\n        }\n        return body;\n    };\n\n    render() {\n        return (\n            <div>\n                <Login createWebsocketConnection={this.createWebsocketConnection} />\n                <Messages updateMessagesFunction={updateMessages} />\n                <ChatInput sendFunction={this.send} />\n            </div>);\n    }\n}\n\nexport default Chat;\nexport {updateMessages};"]},"metadata":{},"sourceType":"module"}