{"ast":null,"code":"import _classCallCheck from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/egor/WebstormProjects/NodeReact/client/src/Chat/Chat.js\";\nimport React from 'react';\nimport Messages from \"./Messages\";\nimport ChatInput from \"./ChatInput\";\nimport Login from './Login';\nimport UsersOnline from './UsersOnline';\nimport openSocket from 'socket.io-client';\nimport Message from '../models/message';\n\nvar Chat =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  function Chat(props) {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chat).call(this, props));\n\n    _this.createWS = function (nickname) {\n      _this.socket = openSocket('http://localhost:5000?nickname=' + nickname);\n\n      _this.socket.on('newUser', function (message) {\n        console.log('Websocket: from \\'newUser\\' channel:', message);\n\n        _this.updateUsersOnline(message.data.usersOnline);\n\n        _this.updateMessages(message);\n      });\n\n      _this.socket.on('message', function (message) {\n        console.log('Websocket: from \\'message\\' channel:', message);\n\n        _this.updateMessages(message);\n      });\n    };\n\n    _this.sendToServer = function (message) {\n      _this.socket.emit('message', message);\n    };\n\n    _this.updateMessages = function (message) {\n      _this.setState({\n        messages: _this.state.messages.concat(message)\n      });\n    };\n\n    _this.updateUsersOnline = function (users) {\n      _this.setState({\n        usersOnline: users\n      });\n    };\n\n    _this.socket = null;\n    _this.state = {\n      usersOnline: [],\n      messages: []\n    };\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Login, {\n        createWS: this.createWS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(UsersOnline, {\n        usersOnline: this.state.usersOnline,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(Messages, {\n        messages: this.state.messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(ChatInput, {\n        sendToServer: this.sendToServer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport default Chat;","map":{"version":3,"sources":["/home/egor/WebstormProjects/NodeReact/client/src/Chat/Chat.js"],"names":["React","Messages","ChatInput","Login","UsersOnline","openSocket","Message","Chat","props","createWS","nickname","socket","on","message","console","log","updateUsersOnline","data","usersOnline","updateMessages","sendToServer","emit","setState","messages","state","concat","users","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;IAEMC,I;;;;;AAEF,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8EAAMA,KAAN;;AADe,UASnBC,QATmB,GASR,UAACC,QAAD,EAAc;AACrB,YAAKC,MAAL,GAAcN,UAAU,CAAC,oCAAoCK,QAArC,CAAxB;;AACA,YAAKC,MAAL,CAAYC,EAAZ,CAAe,SAAf,EAA0B,UAACC,OAAD,EAAa;AACnCC,QAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDF,OAApD;;AACA,cAAKG,iBAAL,CAAuBH,OAAO,CAACI,IAAR,CAAaC,WAApC;;AACA,cAAKC,cAAL,CAAoBN,OAApB;AACH,OAJD;;AAKA,YAAKF,MAAL,CAAYC,EAAZ,CAAe,SAAf,EAA0B,UAACC,OAAD,EAAa;AACnCC,QAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDF,OAApD;;AACA,cAAKM,cAAL,CAAoBN,OAApB;AACH,OAHD;AAIH,KApBkB;;AAAA,UA6CnBO,YA7CmB,GA6CJ,UAACP,OAAD,EAAa;AACxB,YAAKF,MAAL,CAAYU,IAAZ,CAAiB,SAAjB,EAA4BR,OAA5B;AACH,KA/CkB;;AAAA,UAiDnBM,cAjDmB,GAiDF,UAACN,OAAD,EAAa;AAC1B,YAAKS,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAE,MAAKC,KAAL,CAAWD,QAAX,CAAoBE,MAApB,CAA2BZ,OAA3B;AAAX,OAAd;AACH,KAnDkB;;AAAA,UAqDnBG,iBArDmB,GAqDC,UAACU,KAAD,EAAW;AAC3B,YAAKJ,QAAL,CAAc;AAACJ,QAAAA,WAAW,EAAEQ;AAAd,OAAd;AACH,KAvDkB;;AAEf,UAAKf,MAAL,GAAc,IAAd;AACA,UAAKa,KAAL,GAAa;AACTN,MAAAA,WAAW,EAAE,EADJ;AAETK,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAHe;AAOlB;;;;6BAkDQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,QAAQ,EAAE,KAAKd,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,WAAD;AAAa,QAAA,WAAW,EAAE,KAAKe,KAAL,CAAWN,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,KAAKM,KAAL,CAAWD,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAE,KAAKH,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADJ;AAQH;;;;EApEcpB,KAAK,CAAC2B,S;;AAuEzB,eAAepB,IAAf","sourcesContent":["import React from 'react';\nimport Messages from \"./Messages\";\nimport ChatInput from \"./ChatInput\";\nimport Login from './Login';\nimport UsersOnline from './UsersOnline';\nimport openSocket from 'socket.io-client';\nimport Message from '../models/message';\n\nclass Chat extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.socket = null;\n        this.state = {\n            usersOnline: [],\n            messages: []\n        };\n    }\n\n    createWS = (nickname) => {\n        this.socket = openSocket('http://localhost:5000?nickname=' + nickname);\n        this.socket.on('newUser', (message) => {\n            console.log('Websocket: from \\'newUser\\' channel:', message);\n            this.updateUsersOnline(message.data.usersOnline);\n            this.updateMessages(message);\n        });\n        this.socket.on('message', (message) => {\n            console.log('Websocket: from \\'message\\' channel:', message);\n            this.updateMessages(message);\n        });\n    };\n\n    // connection = null;\n    //\n    // createWS = (nickname) => {\n    //     this.connection = new WebSocket('ws://127.0.0.1:5000/?nickname=' + nickname);\n    //     this.connection.onopen = () => {\n    //         console.log('WEBSOCKET RUN');\n    //     };\n    //     this.connection.onmessage = (message) => {\n    //         let messageJSON = JSON.parse(message.data);\n    //         switch (messageJSON.channel) {\n    //             case 'usersOnline':\n    //                 this.updateUsersOnline(messageJSON.data);\n    //                 this.updateMessages(new Message(messageJSON.text,\n    //                     messageJSON.type));\n    //                 break;\n    //             case 'messages':\n    //                 this.updateMessages(new Message(messageJSON.text,\n    //                     messageJSON.type));\n    //                 break;\n    //         }\n    //     };\n    // };\n\n    sendToServer = (message) => {\n        this.socket.emit('message', message);\n    };\n\n    updateMessages = (message) => {\n        this.setState({messages: this.state.messages.concat(message)});\n    };\n\n    updateUsersOnline = (users) => {\n        this.setState({usersOnline: users});\n    };\n\n    render() {\n        return(\n            <div>\n                <Login createWS={this.createWS} />\n                <UsersOnline usersOnline={this.state.usersOnline} />\n                <Messages messages={this.state.messages} />\n                <ChatInput sendToServer={this.sendToServer} />\n            </div>\n        );\n    }\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}