{"ast":null,"code":"import _classCallCheck from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/egor/WebstormProjects/NodeReact/client/src/Chat/Private.js\";\nimport React from 'react';\nimport openSocket from 'socket.io-client';\nimport { updateNav } from \"./Chat\";\n\nvar Private =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Private, _React$Component);\n\n  function Private() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Private);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Private)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.connectToPrivate = function () {\n      fetch('/session/user').then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        var conversationId = data.user.id + '-' + _this.partner.id;\n        _this.socket = openSocket(\"http://localhost:5000/private?conversationId=\".concat(conversationId));\n\n        _this.socket.on('established', function (message) {\n          console.log('Websocket: broadcast from \\'private\\' namespace \\'established\\' channel:', message); // this.updateUsersOnline(message.data.usersOnline);\n\n          updateNav({\n            navName: _this.partner.nickname,\n            route: _this.pathToPrivateChat + _this.partner.nickname\n          });\n\n          _this.updateMessages(message);\n        });\n\n        _this.socket.on('message', function (message) {\n          console.log('Websocket: broadcast from \\'private\\' namespace \\'message\\' channel:', message);\n\n          _this.updateMessages(message);\n        }); // this.socket.on('demolished', (message) => {\n        //     console.log('Websocket: broadcast from \\'private\\' namespace \\'userDisconnected\\' channel:', message);\n        //     this.updateUsersOnline(message.data.usersOnline);\n        //     this.updateMessages(message);\n        // });\n\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Private, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.props.location.search);\n      var params = new URLSearchParams(this.props.location.search);\n      this.partner = {\n        id: params.get('id'),\n        nickname: params.get('nickname')\n      };\n      document.title = 'Private with ' + this.partner.nickname;\n      this.connectToPrivate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"NOT IMPLEMENTED\");\n    }\n  }]);\n\n  return Private;\n}(React.Component);\n\nexport default Private;","map":{"version":3,"sources":["/home/egor/WebstormProjects/NodeReact/client/src/Chat/Private.js"],"names":["React","openSocket","updateNav","Private","connectToPrivate","fetch","then","res","json","data","conversationId","user","id","partner","socket","on","message","console","log","navName","nickname","route","pathToPrivateChat","updateMessages","props","location","search","params","URLSearchParams","get","document","title","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAAQC,SAAR,QAAwB,QAAxB;;IAEMC,O;;;;;;;;;;;;;;;;;;UAaFC,gB,GAAmB,YAAM;AACrBC,MAAAA,KAAK,CAAC,eAAD,CAAL,CAAuBC,IAAvB,CAA4B,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAA/B,EAA+CF,IAA/C,CAAoD,UAAAG,IAAI,EAAI;AACxD,YAAIC,cAAc,GAAID,IAAI,CAACE,IAAL,CAAUC,EAAV,GAAe,GAAf,GAAqB,MAAKC,OAAL,CAAaD,EAAxD;AACA,cAAKE,MAAL,GAAcb,UAAU,wDAAiDS,cAAjD,EAAxB;;AACA,cAAKI,MAAL,CAAYC,EAAZ,CAAe,aAAf,EAA8B,UAACC,OAAD,EAAa;AACvCC,UAAAA,OAAO,CAACC,GAAR,CAAY,0EAAZ,EAAwFF,OAAxF,EADuC,CAEvC;;AACAd,UAAAA,SAAS,CAAC;AACNiB,YAAAA,OAAO,EAAE,MAAKN,OAAL,CAAaO,QADhB;AAENC,YAAAA,KAAK,EAAE,MAAKC,iBAAL,GAAuB,MAAKT,OAAL,CAAaO;AAFrC,WAAD,CAAT;;AAIA,gBAAKG,cAAL,CAAoBP,OAApB;AACH,SARD;;AASA,cAAKF,MAAL,CAAYC,EAAZ,CAAe,SAAf,EAA0B,UAACC,OAAD,EAAa;AACnCC,UAAAA,OAAO,CAACC,GAAR,CAAY,sEAAZ,EAAoFF,OAApF;;AACA,gBAAKO,cAAL,CAAoBP,OAApB;AACH,SAHD,EAZwD,CAgBxD;AACA;AACA;AACA;AACA;;AACH,OArBD;AAsBH,K;;;;;;;wCAlCmB;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKM,KAAL,CAAWC,QAAX,CAAoBC,MAAhC;AACA,UAAMC,MAAM,GAAG,IAAIC,eAAJ,CAAoB,KAAKJ,KAAL,CAAWC,QAAX,CAAoBC,MAAxC,CAAf;AACA,WAAKb,OAAL,GAAe;AACXD,QAAAA,EAAE,EAAEe,MAAM,CAACE,GAAP,CAAW,IAAX,CADO;AAEXT,QAAAA,QAAQ,EAAEO,MAAM,CAACE,GAAP,CAAW,UAAX;AAFC,OAAf;AAIAC,MAAAA,QAAQ,CAACC,KAAT,GAAiB,kBAAkB,KAAKlB,OAAL,CAAaO,QAAhD;AACA,WAAKhB,gBAAL;AACH;;;6BA2BQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ;AAKH;;;;EA5CiBJ,KAAK,CAACgC,S;;AA+C5B,eAAe7B,OAAf","sourcesContent":["import React from 'react';\nimport openSocket from 'socket.io-client';\nimport {updateNav} from \"./Chat\";\n\nclass Private extends React.Component{\n\n    componentDidMount() {\n        console.log(this.props.location.search);\n        const params = new URLSearchParams(this.props.location.search);\n        this.partner = {\n            id: params.get('id'),\n            nickname: params.get('nickname')\n        };\n        document.title = 'Private with ' + this.partner.nickname;\n        this.connectToPrivate();\n    }\n\n    connectToPrivate = () => {\n        fetch('/session/user').then(res => res.json()).then(data => {\n            let conversationId = (data.user.id + '-' + this.partner.id);\n            this.socket = openSocket(`http://localhost:5000/private?conversationId=${conversationId}`);\n            this.socket.on('established', (message) => {\n                console.log('Websocket: broadcast from \\'private\\' namespace \\'established\\' channel:', message);\n                // this.updateUsersOnline(message.data.usersOnline);\n                updateNav({\n                    navName: this.partner.nickname,\n                    route: this.pathToPrivateChat+this.partner.nickname\n                });\n                this.updateMessages(message);\n            });\n            this.socket.on('message', (message) => {\n                console.log('Websocket: broadcast from \\'private\\' namespace \\'message\\' channel:', message);\n                this.updateMessages(message);\n            });\n            // this.socket.on('demolished', (message) => {\n            //     console.log('Websocket: broadcast from \\'private\\' namespace \\'userDisconnected\\' channel:', message);\n            //     this.updateUsersOnline(message.data.usersOnline);\n            //     this.updateMessages(message);\n            // });\n        });\n    };\n    \n    render() {\n        return (\n            <div>\n                NOT IMPLEMENTED\n            </div>\n        )\n    }\n}\n\nexport default Private;"]},"metadata":{},"sourceType":"module"}