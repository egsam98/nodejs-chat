{"ast":null,"code":"import _classCallCheck from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/egor/WebstormProjects/NodeReact/client/src/Chat/Chat.js\";\nimport React from 'react';\nimport Messages from \"./Messages\";\nimport ChatInput from \"./ChatInput\";\nimport Login from './Login';\nimport UserOnline from \"./UserOnline\";\nimport { BrowserRouter as Router, Route, Switch, Redirect, Link } from \"react-router-dom\";\nimport { connectToWS, sendToServer } from \"../index\";\n\nfunction updateNav(nav) {\n  this.setState({\n    nav: this.state.nav.concat(nav)\n  });\n}\n\nfunction updateMessages(message) {\n  this.setState({\n    messages: this.state.messages.concat(message)\n  });\n}\n\nfunction updateUsersOnline(users) {\n  this.setState({\n    usersOnline: users\n  });\n}\n\nvar Chat =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  function Chat(props) {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chat).call(this, props));\n    _this.pathToPrivateChat = '/private';\n    _this.state = {\n      nav: [],\n      usersOnline: [],\n      messages: []\n    };\n    updateNav = updateNav.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.connectToWS = connectToWS.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.sendToServer = sendToServer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log('NAV', this.state.nav);\n      var nav = this.state.nav.map(function (item, i) {\n        return React.createElement(Link, {\n          to: item.route,\n          className: \"nav-item nav-link\",\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, item.navName);\n      });\n      var usersOnline = this.state.usersOnline.map(function (user, i) {\n        return React.createElement(UserOnline, {\n          key: i,\n          user: user,\n          connectToPrivate: _this2.connectToPrivate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-expand-lg navbar-light bg-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"navbar-brand\",\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Chat\")), React.createElement(\"button\", {\n        className: \"navbar-toggler\",\n        type: \"button\",\n        \"data-toggle\": \"collapse\",\n        \"data-target\": \"#navbarNavAltMarkup\",\n        \"aria-controls\": \"navbarNavAltMarkup\",\n        \"aria-expanded\": \"false\",\n        \"aria-label\": \"Toggle navigation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"navbar-toggler-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"collapse navbar-collapse\",\n        id: \"navbarNavAltMarkup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, nav))), React.createElement(Login, {\n        connectToWS: this.connectToWS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"usersOnlineStyle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, usersOnline), React.createElement(Messages, {\n        messages: this.state.messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(ChatInput, {\n        sendToServer: this.sendToServer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport default Chat;\nexport { updateNav, updateUsersOnline, updateMessages };","map":{"version":3,"sources":["/home/egor/WebstormProjects/NodeReact/client/src/Chat/Chat.js"],"names":["React","Messages","ChatInput","Login","UserOnline","BrowserRouter","Router","Route","Switch","Redirect","Link","connectToWS","sendToServer","updateNav","nav","setState","state","concat","updateMessages","message","messages","updateUsersOnline","users","usersOnline","Chat","props","pathToPrivateChat","bind","console","log","map","item","i","route","navName","user","connectToPrivate","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Messages from \"./Messages\";\nimport ChatInput from \"./ChatInput\";\nimport Login from './Login';\nimport UserOnline from \"./UserOnline\";\nimport {BrowserRouter as Router, Route, Switch, Redirect, Link} from \"react-router-dom\";\nimport {connectToWS, sendToServer} from \"../index\";\n\nfunction updateNav(nav) {\n    this.setState({nav: this.state.nav.concat(nav)})\n}\n\nfunction updateMessages(message) {\n    this.setState({messages: this.state.messages.concat(message)});\n}\n\nfunction updateUsersOnline(users) {\n    this.setState({usersOnline: users});\n}\n\nclass Chat extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.pathToPrivateChat = '/private';\n        this.state = {\n            nav: [],\n            usersOnline: [],\n            messages: [],\n        };\n        updateNav = updateNav.bind(this);\n        this.connectToWS = connectToWS.bind(this);\n        this.sendToServer = sendToServer.bind(this);\n    }\n\n    render() {\n        console.log('NAV', this.state.nav);\n        const nav = this.state.nav.map((item, i) => {\n            return <Link to={item.route} className=\"nav-item nav-link\" key={i}>{item.navName}</Link>\n        });\n        const usersOnline = this.state.usersOnline.map((user, i) => {\n            return <UserOnline key={i} user={user}\n                               connectToPrivate={this.connectToPrivate} />\n        });\n        return(\n            <div>\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                    <a className=\"navbar-brand\" href=\"#\">\n                        <h3>Chat</h3>\n                    </a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\"\n                            aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\" />\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n                        <div className=\"navbar-nav\">\n                            {nav}\n                        </div>\n                    </div>\n                </nav>\n                <Login connectToWS={this.connectToWS}/>\n                <div className='usersOnlineStyle'>\n                    {usersOnline}\n                </div>\n                <Messages messages={this.state.messages} />\n                <ChatInput sendToServer={this.sendToServer} />\n            </div>\n        );\n    }\n}\n\nexport default Chat;\nexport {updateNav, updateUsersOnline, updateMessages}"]},"metadata":{},"sourceType":"module"}