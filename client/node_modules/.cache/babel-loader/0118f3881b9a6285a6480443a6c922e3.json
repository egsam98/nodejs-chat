{"ast":null,"code":"import _classCallCheck from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/egor/WebstormProjects/NodeReact/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/egor/WebstormProjects/NodeReact/client/src/Chat/Messages.js\";\nimport React from 'react';\nimport '../css/styles.css';\n\nvar Messages =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Messages, _React$Component);\n\n  function Messages() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Messages);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Messages)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.wrapMessagesInHtml = function (message, i) {\n      var info = {\n        color: '#828282',\n        fontStyle: 'italic',\n        display: 'flex',\n        justifyContent: 'center',\n        padding: '0px'\n      };\n      var messageStyle = {\n        fontSize: '24px',\n        padding: '5px',\n        wordWrap: 'break-word'\n      };\n\n      if (message.type === 'info') {\n        Object.assign(messageStyle, info);\n        return React.createElement(\"div\", {\n          style: messageStyle,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, message.text);\n      } else return React.createElement(\"div\", {\n        style: messageStyle,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: message.data.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), \" \", message.data.nickname, \": \", message.text);\n    };\n\n    return _this;\n  }\n\n  _createClass(Messages, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var messagesDiv = {\n        height: '85vh',\n        overflow: 'scroll',\n        overflowX: 'hidden',\n        overflowY: 'auto'\n      };\n      console.log(this.props);\n      var messages = this.props.messages.map(function (message, i) {\n        return _this2.wrapMessagesInHtml(message, i);\n      });\n      return React.createElement(\"div\", {\n        style: messagesDiv,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, messages);\n    }\n  }]);\n\n  return Messages;\n}(React.Component);\n\nexport default Messages;","map":{"version":3,"sources":["/home/egor/WebstormProjects/NodeReact/client/src/Chat/Messages.js"],"names":["React","Messages","wrapMessagesInHtml","message","i","info","color","fontStyle","display","justifyContent","padding","messageStyle","fontSize","wordWrap","type","Object","assign","text","data","avatar","nickname","messagesDiv","height","overflow","overflowX","overflowY","console","log","props","messages","map","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;;IAEMC,Q;;;;;;;;;;;;;;;;;;UAEFC,kB,GAAqB,UAACC,OAAD,EAAUC,CAAV,EAAgB;AACjC,UAAMC,IAAI,GAAG;AACTC,QAAAA,KAAK,EAAE,SADE;AAETC,QAAAA,SAAS,EAAE,QAFF;AAGTC,QAAAA,OAAO,EAAE,MAHA;AAITC,QAAAA,cAAc,EAAE,QAJP;AAKTC,QAAAA,OAAO,EAAE;AALA,OAAb;AAOA,UAAMC,YAAY,GAAG;AACjBC,QAAAA,QAAQ,EAAE,MADO;AAEjBF,QAAAA,OAAO,EAAE,KAFQ;AAGjBG,QAAAA,QAAQ,EAAE;AAHO,OAArB;;AAMA,UAAIV,OAAO,CAACW,IAAR,KAAiB,MAArB,EAA4B;AACxBC,QAAAA,MAAM,CAACC,MAAP,CAAcL,YAAd,EAA4BN,IAA5B;AACA,eAAO;AAAK,UAAA,KAAK,EAAEM,YAAZ;AAA0B,UAAA,GAAG,EAAEP,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACFD,OAAO,CAACc,IADN,CAAP;AAGH,OALD,MAMK,OAAO;AAAK,QAAA,KAAK,EAAEN,YAAZ;AAA0B,QAAA,GAAG,EAAEP,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACR;AAAK,QAAA,GAAG,EAAED,OAAO,CAACe,IAAR,CAAaC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADQ,OAC2BhB,OAAO,CAACe,IAAR,CAAaE,QADxC,QACoDjB,OAAO,CAACc,IAD5D,CAAP;AAGR,K;;;;;;;6BAEQ;AAAA;;AAEL,UAAMI,WAAW,GAAG;AAChBC,QAAAA,MAAM,EAAE,MADQ;AAEhBC,QAAAA,QAAQ,EAAE,QAFM;AAGhBC,QAAAA,SAAS,EAAE,QAHK;AAIhBC,QAAAA,SAAS,EAAE;AAJK,OAApB;AAOAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,UAAMC,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBC,GAApB,CAAwB,UAAC3B,OAAD,EAAUC,CAAV;AAAA,eAAgB,MAAI,CAACF,kBAAL,CAAwBC,OAAxB,EAAiCC,CAAjC,CAAhB;AAAA,OAAxB,CAAjB;AACA,aAAO;AAAK,QAAA,KAAK,EAAEiB,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BQ,QAA1B,CAAP;AACH;;;;EAvCkB7B,KAAK,CAAC+B,S;;AA0C7B,eAAe9B,QAAf","sourcesContent":["import React from 'react';\nimport '../css/styles.css';\n\nclass Messages extends React.Component {\n\n    wrapMessagesInHtml = (message, i) => {\n        const info = {\n            color: '#828282',\n            fontStyle: 'italic',\n            display: 'flex',\n            justifyContent: 'center',\n            padding: '0px'\n        };\n        const messageStyle = {\n            fontSize: '24px',\n            padding: '5px',\n            wordWrap: 'break-word'\n        };\n\n        if (message.type === 'info'){\n            Object.assign(messageStyle, info);\n            return <div style={messageStyle} key={i}>\n                {message.text}\n            </div>\n        }\n        else return <div style={messageStyle} key={i}>\n            <img src={message.data.avatar} /> {message.data.nickname}: {message.text}\n        </div>\n    };\n\n    render() {\n\n        const messagesDiv = {\n            height: '85vh',\n            overflow: 'scroll',\n            overflowX: 'hidden',\n            overflowY: 'auto',\n        };\n\n        console.log(this.props);\n        const messages = this.props.messages.map((message, i) => this.wrapMessagesInHtml(message, i));\n        return <div style={messagesDiv}>{messages}</div>;\n    }\n}\n\nexport default Messages;"]},"metadata":{},"sourceType":"module"}